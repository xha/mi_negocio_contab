<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Algolia.Search</name>
    </assembly>
    <members>
        <member name="T:Algolia.Search.Clients.AccountClient">
            <summary>
            Client to perfom cross indices operations implementation of <see cref="T:Algolia.Search.Clients.IAccountClient"/>
            </summary>
        </member>
        <member name="M:Algolia.Search.Clients.AccountClient.CopyIndex``1(Algolia.Search.Clients.ISearchIndex,Algolia.Search.Clients.ISearchIndex,Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.AccountClient.CopyIndexAsync``1(Algolia.Search.Clients.ISearchIndex,Algolia.Search.Clients.ISearchIndex,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Algolia.Search.Clients.AlgoliaConfig">
            <summary>
            Algolia's client configuration
            </summary>
        </member>
        <member name="M:Algolia.Search.Clients.AlgoliaConfig.#ctor(System.String,System.String)">
            <summary>
            Create a new Algolia's configuration for the given credentials
            </summary>
            <param name="applicationId">Your application ID</param>
            <param name="apiKey">Your API Key</param>
        </member>
        <member name="P:Algolia.Search.Clients.AlgoliaConfig.AppId">
            <summary>
            The application ID
            </summary>
            <returns></returns>
        </member>
        <member name="P:Algolia.Search.Clients.AlgoliaConfig.ApiKey">
            <summary>
            The admin API Key
            </summary>
            <returns></returns>
        </member>
        <member name="P:Algolia.Search.Clients.AlgoliaConfig.CustomHosts">
            <summary>
            Configurations hosts
            </summary>
        </member>
        <member name="P:Algolia.Search.Clients.AlgoliaConfig.DefaultHeaders">
            <summary>
            Algolia's default headers.
            Will be sent for every request
            </summary>
        </member>
        <member name="P:Algolia.Search.Clients.AlgoliaConfig.BatchSize">
            <summary>
            Save methods batch size
            </summary>
        </member>
        <member name="P:Algolia.Search.Clients.AlgoliaConfig.ReadTimeout">
            <summary>
            Set the read timeout in seconds for all requests
            </summary>
        </member>
        <member name="P:Algolia.Search.Clients.AlgoliaConfig.WriteTimeout">
            <summary>
            Set the read timeout in seconds for all requests
            </summary>
        </member>
        <member name="P:Algolia.Search.Clients.AlgoliaConfig.DefaultHosts">
            <summary>
            Configurations hosts
            </summary>
        </member>
        <member name="T:Algolia.Search.Clients.AnalyticsClient">
            <summary>
            Algolia Analytics Client implementation of <see cref="T:Algolia.Search.Clients.IAnalyticsClient"/>
            </summary>
        </member>
        <member name="M:Algolia.Search.Clients.AnalyticsClient.#ctor(System.String,System.String)">
            <summary>
            Create a new search client for the given appID
            </summary>
            <param name="applicationId">Your application ID</param>
            <param name="apiKey">Your Api KEY</param>
        </member>
        <member name="M:Algolia.Search.Clients.AnalyticsClient.#ctor(Algolia.Search.Clients.AnalyticsConfig)">
            <summary>
            Initialize a client with custom config
            </summary>
            <param name="config">Algolia config instance</param>
        </member>
        <member name="M:Algolia.Search.Clients.AnalyticsClient.#ctor(Algolia.Search.Clients.AnalyticsConfig,Algolia.Search.Http.IHttpRequester)">
            <summary>
            Initialize the client with custom config and custom Requester
            </summary>
            <param name="config">Algolia config instance</param>
            <param name="httpRequester">Your Http requester implementation of <see cref="T:Algolia.Search.Http.IHttpRequester"/></param>
        </member>
        <member name="M:Algolia.Search.Clients.AnalyticsClient.GetABTest(System.Int64,Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.AnalyticsClient.GetABTestAsync(System.Int64,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.AnalyticsClient.GetABTests(System.Int32,System.Int32,Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.AnalyticsClient.GetABTestsAsync(System.Int32,System.Int32,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.AnalyticsClient.AddABTest(Algolia.Search.Models.Analytics.ABTest,Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.AnalyticsClient.AddABTestAsync(Algolia.Search.Models.Analytics.ABTest,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.AnalyticsClient.StopABTest(System.Int64,Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.AnalyticsClient.StopABTestAsync(System.Int64,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.AnalyticsClient.DeleteABTest(System.Int64,Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.AnalyticsClient.DeleteABTestAsync(System.Int64,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Algolia.Search.Clients.AnalyticsConfig">
            <summary>
            Analytics client configuration
            </summary>
        </member>
        <member name="M:Algolia.Search.Clients.AnalyticsConfig.#ctor(System.String,System.String)">
            <summary>
            The configuration of the analytics client
            A client should have it's own configuration ie on configuration per client instance
            </summary>
            <param name="applicationId">Your application ID</param>
            <param name="apiKey">Your API Key</param>
        </member>
        <member name="T:Algolia.Search.Clients.IAccountClient">
            <summary>
            Interface for account client
            </summary>
        </member>
        <member name="M:Algolia.Search.Clients.IAccountClient.CopyIndex``1(Algolia.Search.Clients.ISearchIndex,Algolia.Search.Clients.ISearchIndex,Algolia.Search.Http.RequestOptions)">
            <summary>
            The method copy settings, synonyms, rules and objects from the source index to the destination index
            </summary>
            <typeparam name="T">Type of the data to send/retrieve</typeparam>
            <param name="sourceIndex">The source index</param>
            <param name="destinationIndex">The destination index</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.IAccountClient.CopyIndexAsync``1(Algolia.Search.Clients.ISearchIndex,Algolia.Search.Clients.ISearchIndex,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            The method copy settings, synonyms, rules and objects from the source index to the destination index
            </summary>
            <typeparam name="T">Type of the data to send/retrieve</typeparam>
            <param name="sourceIndex">The source index</param>
            <param name="destinationIndex">The destination index</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:Algolia.Search.Clients.IAnalyticsClient">
            <summary>
            Analytics client
            </summary>
        </member>
        <member name="M:Algolia.Search.Clients.IAnalyticsClient.GetABTest(System.Int64,Algolia.Search.Http.RequestOptions)">
            <summary>
            Get an A/B test information and results.
            </summary>
            <param name="abTestId"></param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.IAnalyticsClient.GetABTestAsync(System.Int64,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Get an A/B test information and results.
            </summary>
            <param name="abTestId"></param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.IAnalyticsClient.GetABTests(System.Int32,System.Int32,Algolia.Search.Http.RequestOptions)">
            <summary>
            Fetch all existing AB Tests for App that are available for the current API Key. Returns an array of metadata and metrics.
            </summary>
            <param name="offset"></param>
            <param name="limit"></param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.IAnalyticsClient.GetABTestsAsync(System.Int32,System.Int32,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Fetch all existing AB Tests for App that are available for the current API Key. Returns an array of metadata and metrics.
            </summary>
            <param name="offset"></param>
            <param name="limit"></param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.IAnalyticsClient.AddABTest(Algolia.Search.Models.Analytics.ABTest,Algolia.Search.Http.RequestOptions)">
            <summary>
            Creates a new AB Test with provided configuration.
            </summary>
            <param name="aBTest"></param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.IAnalyticsClient.AddABTestAsync(Algolia.Search.Models.Analytics.ABTest,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Creates a new AB Test with provided configuration.
            </summary>
            <param name="aBTest"></param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.IAnalyticsClient.StopABTest(System.Int64,Algolia.Search.Http.RequestOptions)">
            <summary>
            Marks the A/B Test as stopped. At this point, the test is over and cannot be restarted.
            As a result, your application is back to normal: index A will perform as usual, receiving 100% of all search requests.
            Associated metadata and metrics are still stored
            </summary>
            <param name="abTestId"></param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.IAnalyticsClient.StopABTestAsync(System.Int64,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Marks the A/B Test as stopped. At this point, the test is over and cannot be restarted.
            As a result, your application is back to normal: index A will perform as usual, receiving 100% of all search requests.
            Associated metadata and metrics are still stored
            </summary>
            <param name="abTestId"></param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.IAnalyticsClient.DeleteABTest(System.Int64,Algolia.Search.Http.RequestOptions)">
            <summary>
            Deletes the A/B Test and removes all associated metadata and metrics.
            </summary>
            <param name="abTestId"></param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.IAnalyticsClient.DeleteABTestAsync(System.Int64,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Deletes the A/B Test and removes all associated metadata and metrics.
            </summary>
            <param name="abTestId"></param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:Algolia.Search.Clients.IInsightsClient">
            <summary>
            Interface for Insights client
            </summary>
        </member>
        <member name="M:Algolia.Search.Clients.IInsightsClient.User(System.String)">
            <summary>
            Set the user token
            </summary>
            <param name="userToken">The user token</param>
        </member>
        <member name="M:Algolia.Search.Clients.IInsightsClient.SendEvent(Algolia.Search.Models.Insights.InsightsEvent,Algolia.Search.Http.RequestOptions)">
            <summary>
            This command pushes an event to the Insights API.
            </summary>
            <param name="insightEvent">An insight event</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.IInsightsClient.SendEvents(System.Collections.Generic.IEnumerable{Algolia.Search.Models.Insights.InsightsEvent},Algolia.Search.Http.RequestOptions)">
            <summary>
            This command pushes an event to the Insights API.
            </summary>
            <param name="insightEvents">A list of insights events</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.IInsightsClient.SendEventAsync(Algolia.Search.Models.Insights.InsightsEvent,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            This command pushes an event to the Insights API.
            </summary>
            <param name="insightEvent">An insight event</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.IInsightsClient.SendEventsAsync(System.Collections.Generic.IEnumerable{Algolia.Search.Models.Insights.InsightsEvent},Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            This command pushes an array of events to the Insights API.
            </summary>
            <param name="insightEvents">A list of insights events</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:Algolia.Search.Clients.InsightsClient">
            <summary>
            Implementation of <see cref="T:Algolia.Search.Clients.IInsightsClient"/>
            </summary>
        </member>
        <member name="M:Algolia.Search.Clients.InsightsClient.#ctor(System.String,System.String,System.String)">
            <summary>
            Initialize a new insights client
            </summary>
            <param name="applicationId">The application ID</param>
            <param name="apiKey">The api Key</param>
            <param name="region">Server's region</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.InsightsClient.#ctor(Algolia.Search.Clients.InsightsConfig)">
            <summary>
            Initialize a new insights client with configuration
            </summary>
            <param name="config"></param>
        </member>
        <member name="M:Algolia.Search.Clients.InsightsClient.#ctor(Algolia.Search.Clients.InsightsConfig,Algolia.Search.Http.IHttpRequester)">
            <summary>
            Initialize a new insights client with configuration and custom httpRequester
            </summary>
            <param name="config"></param>
            <param name="httpRequester"></param>
        </member>
        <member name="M:Algolia.Search.Clients.InsightsClient.User(System.String)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.InsightsClient.SendEvent(Algolia.Search.Models.Insights.InsightsEvent,Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.InsightsClient.SendEvents(System.Collections.Generic.IEnumerable{Algolia.Search.Models.Insights.InsightsEvent},Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.InsightsClient.SendEventAsync(Algolia.Search.Models.Insights.InsightsEvent,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.InsightsClient.SendEventsAsync(System.Collections.Generic.IEnumerable{Algolia.Search.Models.Insights.InsightsEvent},Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Algolia.Search.Clients.InsightsConfig">
            <summary>
            Insights client configuration
            </summary>
        </member>
        <member name="M:Algolia.Search.Clients.InsightsConfig.#ctor(System.String,System.String,System.String)">
            <summary>
            The configuration of the insights client
            A client should have it's own configuration ie on configuration per client instance
            </summary>
            <param name="applicationId">Your application ID</param>
            <param name="apiKey">Your API Key</param>
            <param name="region">Insigts api's region</param>
        </member>
        <member name="T:Algolia.Search.Clients.ISearchClient">
            <summary>
            Search Client interface
            </summary>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.InitIndex(System.String)">
            <summary>
            Initialize an index for the given client
            </summary>
            <param name="indexName"></param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.MultipleGetObjects``1(System.Collections.Generic.IEnumerable{Algolia.Search.Models.Common.MultipleGetObject},Algolia.Search.Http.RequestOptions)">
            <summary>
            Retrieve one or more objects, potentially from different indices, in a single API call.
            </summary>
            <typeparam name="T">Type of the data to send/retrieve</typeparam>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.MultipleGetObjectsAsync``1(System.Collections.Generic.IEnumerable{Algolia.Search.Models.Common.MultipleGetObject},Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Retrieve one or more objects, potentially from different indices, in a single API call.
            </summary>
            <typeparam name="T">Type of the data to send/retrieve</typeparam>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.MultipleQueries``1(Algolia.Search.Models.Common.MultipleQueriesRequest,Algolia.Search.Http.RequestOptions)">
            <summary>
            This method allows to send multiple search queries, potentially targeting multiple indices, in a single API call.
            </summary>
            <typeparam name="T">Type of the data to send/retrieve</typeparam>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.MultipleQueriesAsync``1(Algolia.Search.Models.Common.MultipleQueriesRequest,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            This method allows to send multiple search queries, potentially targeting multiple indices, in a single API call.
            </summary>
            <typeparam name="T">Type of the data to send/retrieve</typeparam>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.MultipleBatch``1(System.Collections.Generic.IEnumerable{Algolia.Search.Models.Batch.BatchOperation{``0}},Algolia.Search.Http.RequestOptions)">
            <summary>
            Perform multiple write operations, potentially targeting multiple indices, in a single API call.
            </summary>
            <typeparam name="T">Type of the data to send/retrieve</typeparam>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.MultipleBatchAsync``1(System.Collections.Generic.IEnumerable{Algolia.Search.Models.Batch.BatchOperation{``0}},Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Perform multiple write operations, potentially targeting multiple indices, in a single API call.
            </summary>
            <typeparam name="T">Type of the data to send/retrieve</typeparam>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.ListIndices(Algolia.Search.Http.RequestOptions)">
            <summary>
            Get a list of indexes/indices with their associated metadata.
            </summary>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.ListIndicesAsync(Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Get a list of indexes/indices with their associated metadata.
            </summary>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.GenerateSecuredApiKeys(System.String,Algolia.Search.Models.ApiKeys.SecuredApiKeyRestriction)">
            <summary>
            Generate a virtual API Key without any call to the server.
            </summary>
            <param name="parentApiKey"></param>
            <param name="restriction"></param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.ListApiKeys(Algolia.Search.Http.RequestOptions)">
            <summary>
            Get the full list of API Keys.
            </summary>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.ListApiKeysAsync(Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Get the full list of API Keys.
            </summary>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.GetApiKey(System.String,Algolia.Search.Http.RequestOptions)">
            <summary>
            Get the permissions of an API Key.
            </summary>
            <param name="apiKey"></param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.GetApiKeyAsync(System.String,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Get the permissions of an API Key.
            </summary>
            <param name="apiKey"></param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.AddApiKey(Algolia.Search.Models.ApiKeys.ApiKey,Algolia.Search.Http.RequestOptions)">
            <summary>
            Add a new API Key with specific permissions/restrictions.
            </summary>
            <param name="apiKey"></param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.AddApiKeyAsync(Algolia.Search.Models.ApiKeys.ApiKey,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Add a new API Key with specific permissions/restrictions.
            </summary>
            <param name="apiKey"></param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.UpdateApiKey(Algolia.Search.Models.ApiKeys.ApiKey,Algolia.Search.Http.RequestOptions)">
            <summary>
            Update the permissions of an existing API Key.
            </summary>
            <param name="request"></param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.UpdateApiKeyAsync(Algolia.Search.Models.ApiKeys.ApiKey,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Update the permissions of an existing API Key.
            </summary>
            <param name="request"></param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.DeleteApiKey(System.String,Algolia.Search.Http.RequestOptions)">
            <summary>
            Delete an existing API Key
            </summary>
            <param name="apiKey"></param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.DeleteApiKeyAsync(System.String,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Delete an existing API Key
            </summary>
            <param name="apiKey"></param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.RestoreApiKey(System.String,Algolia.Search.Http.RequestOptions)">
            <summary>
            Restore the given APIKey
            </summary>
            <param name="apiKey">The API Key to restore</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.RestoreApiKeyAsync(System.String,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Restore the given APIKey
            </summary>
            <param name="apiKey">The API Key to restore</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.ListClusters(Algolia.Search.Http.RequestOptions)">
            <summary>
            List the clusters available in a multi-clusters setup for a single appID
            </summary>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.ListClustersAsync(Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            List the clusters available in a multi-clusters setup for a single appID
            </summary>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.SearchUserIDs(Algolia.Search.Models.Mcm.SearchUserIdsRequest,Algolia.Search.Http.RequestOptions)">
            <summary>
            Search for userIDs
            The data returned will usually be a few seconds behind real-time, because userID usage may take up to a few seconds propagate to the different cluster
            </summary>
            <param name="query"></param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.SearchUserIDsAsync(Algolia.Search.Models.Mcm.SearchUserIdsRequest,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Search for userIDs
            The data returned will usually be a few seconds behind real-time, because userID usage may take up to a few seconds propagate to the different cluster
            </summary>
            <param name="query"></param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.ListUserIds(System.Int32,System.Int32,Algolia.Search.Http.RequestOptions)">
            <summary>
            List the userIDs assigned to a multi-clusters appID.
            </summary>
            <param name="hitsPerPage"></param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.ListUserIdsAsync(System.Int32,System.Int32,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            List the userIDs assigned to a multi-clusters appID.
            </summary>
            <param name="hitsPerPage"></param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.GetUserId(System.String,Algolia.Search.Http.RequestOptions)">
            <summary>
            Returns the userID data stored in the mapping.
            </summary>
            <param name="userId"></param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.GetUserIdAsync(System.String,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Returns the userID data stored in the mapping.
            </summary>
            <param name="userId"></param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.GetTopUserId(Algolia.Search.Http.RequestOptions)">
            <summary>
            Get the top 10 userIDs with the highest number of records per cluster.
            The data returned will usually be a few seconds behind real-time, because userID usage may take up to a few seconds to propagate to the different clusters.
            </summary>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.GetTopUserIdAsync(Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Get the top 10 userIDs with the highest number of records per cluster.
            The data returned will usually be a few seconds behind real-time, because userID usage may take up to a few seconds to propagate to the different clusters.
            </summary>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.AssignUserId(System.String,System.String,Algolia.Search.Http.RequestOptions)">
            <summary>
            Assign or Move a userID to a cluster.
            The time it takes to migrate (move) a user is proportional to the amount of data linked to the userID.
            </summary>
            <param name="userId"></param>
            <param name="clusterName"></param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.AssignUserIdAsync(System.String,System.String,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Assign or Move a userID to a cluster.
            The time it takes to migrate (move) a user is proportional to the amount of data linked to the userID.
            </summary>
            <param name="userId"></param>
            <param name="clusterName"></param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.RemoveUserId(System.String,Algolia.Search.Http.RequestOptions)">
            <summary>
            Remove a userID and its associated data from the multi-clusters.
            </summary>
            <param name="userId"></param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.RemoveUserIdAsync(System.String,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Remove a userID and its associated data from the multi-clusters.
            </summary>
            <param name="userId"></param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.GetLogs(Algolia.Search.Http.RequestOptions,System.Int32,System.Int32)">
            <summary>
            Get the logs of the latest search and indexing operations
            You can retrieve the logs of your last 1,000 API calls. It is designed for immediate, real-time debugging.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.GetLogsAsync(Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken,System.Int32,System.Int32)">
            <summary>
            Get the logs of the latest search and indexing operations
            You can retrieve the logs of your last 1,000 API calls. It is designed for immediate, real-time debugging.
            </summary>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <param name="offset">Specify the first entry to retrieve (0-based, 0 is the most recent log entry).</param>
            <param name="length">Specify the maximum number of entries to retrieve starting at the offset. Maximum allowed value: 1,000.</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.CopySettings(System.String,System.String,Algolia.Search.Http.RequestOptions)">
            <summary>
            Copy the settings of an index to another index
            </summary>
            <param name="sourceIndex"></param>
            <param name="destinationIndex">The destination index</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.CopySettingsAsync(System.String,System.String,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Copy the settings of an index to another index
            </summary>
            <param name="sourceIndex"></param>
            <param name="destinationIndex">The destination index</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.CopyRules(System.String,System.String,Algolia.Search.Http.RequestOptions)">
            <summary>
            Copy the rules of an index to another index
            </summary>
            <param name="sourceIndex"></param>
            <param name="destinationIndex">The destination index</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.CopyRulesAsync(System.String,System.String,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Copy the rules of an index to another index
            </summary>
            <param name="sourceIndex"></param>
            <param name="destinationIndex">The destination index</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.CopySynonyms(System.String,System.String,Algolia.Search.Http.RequestOptions)">
            <summary>
            Make a copy of the synonyms of an index
            </summary>
            <param name="sourceIndex"></param>
            <param name="destinationIndex">The destination index</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.CopySynonymsAsync(System.String,System.String,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Make a copy of the synonyms of an index
            </summary>
            <param name="sourceIndex"></param>
            <param name="destinationIndex">The destination index</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.CopyIndex(System.String,System.String,Algolia.Search.Http.RequestOptions,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Make a copy of an index, including its objects, settings, synonyms, and query rules.
            </summary>
            <param name="sourceIndex"></param>
            <param name="destinationIndex">The destination index</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="scope">The scope copy</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.CopyIndexAsync(System.String,System.String,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Make a copy of an index, including its objects, settings, synonyms, and query rules.
            </summary>
            <param name="sourceIndex"></param>
            <param name="destinationIndex">The destination index</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <param name="scope">The scope copy</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.MoveIndex(System.String,System.String,Algolia.Search.Http.RequestOptions)">
            <summary>
            Rename an index. Normally used to reindex your data atomically, without any down time.
            </summary>
            <param name="sourceIndex"></param>
            <param name="destinationIndex">The destination index</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.MoveIndexAsync(System.String,System.String,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Rename an index. Normally used to reindex your data atomically, without any down time.
            </summary>
            <param name="sourceIndex"></param>
            <param name="destinationIndex">The destination index</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.GetPersonalizationStrategy(Algolia.Search.Http.RequestOptions)">
            <summary>
            Returns the personalization strategy of the application
            </summary>
            <param name="requestOptions"></param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.GetPersonalizationStrategyAsync(Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Returns the personalization strategy of the application
            </summary>
            <param name="requestOptions"></param>
            <param name="ct">Optional cancellation token</param>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.SetPersonalizationStrategy(Algolia.Search.Models.Personalization.SetStrategyRequest,Algolia.Search.Http.RequestOptions)">
            <summary>
            This command configures the personalization strategy
            </summary>
            <param name="request">The personalization strategy</param>
            <param name="requestOptions">Request options for the query</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.SetPersonalizationStrategyAsync(Algolia.Search.Models.Personalization.SetStrategyRequest,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            This command configures the personalization strategy
            </summary>
            <param name="request">The personalization strategy></param>
            <param name="requestOptions">Request options for the query</param>
            <param name="ct">Request options for the query</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.WaitTask(System.String,System.Int64,System.Int32,Algolia.Search.Http.RequestOptions)">
            <summary>
            This function waits for the Algolia's API task to finish
            </summary>
            <param name="indexName">Your index name</param>
            <param name="taskId">taskID returned by Aloglia API</param>
            <param name="timeToWait"></param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.CustomRequest``2(``1,System.String,System.Net.Http.HttpMethod,Algolia.Search.Models.Enums.CallType,Algolia.Search.Http.RequestOptions)">
            <summary>
            Execute a custom request
            </summary>
            <param name="data">Body data</param>
            <param name="uri">The URI to request</param>
            <param name="method">The HTTP method</param>
            <param name="callType">CallType.Write or CallType.Read</param>
            <param name="requestOptions">Add extra http header and query parameters to the request</param>
            <typeparam name="TResult">The type of the result</typeparam>
            <typeparam name="TData">The type of the input</typeparam>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchClient.CustomRequestAsync``2(``1,System.String,System.Net.Http.HttpMethod,Algolia.Search.Models.Enums.CallType,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Execute a custom request asynchronously
            </summary>
            <param name="data">Body data</param>
            <param name="uri">The URI to request</param>
            <param name="method">The HTTP method</param>
            <param name="callType">CallType.Write or CallType.Read</param>
            <param name="requestOptions">Add extra http header and query parameters to the request</param>
            <param name="ct">Optional cancellation token</param>
            <typeparam name="TResult">The type of the result</typeparam>
            <typeparam name="TData">The type of the input</typeparam>
            <returns></returns>
        </member>
        <member name="T:Algolia.Search.Clients.ISearchIndex">
            <summary>
            Search index interface
            </summary>
        </member>
        <member name="P:Algolia.Search.Clients.ISearchIndex.Config">
            <summary>
            Index configuration
            </summary>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.PartialUpdateObject``1(``0,Algolia.Search.Http.RequestOptions,System.Boolean)">
            <summary>
            Update one or more attributes of an existing object.
            This method enables you to update only a part of an object by singling out one or more attributes of an existing object and performing the following actions:
            </summary>
            <param name="data">Data to send</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="createIfNotExists">When true, a partial update on a nonexistent object will create the object (generating the objectID and using the attributes as defined in the object). WHen false, a partial update on a nonexistent object will be ignored (but no error will be sent back).</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.PartialUpdateObjectAsync``1(``0,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken,System.Boolean)">
            <summary>
            Update one or more attributes of an existing object.
            This method enables you to update only a part of an object by singling out one or more attributes of an existing object and performing the following actions:
            </summary>
            <param name="data">Data to send</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <param name="createIfNotExists">When true, a partial update on a nonexistent object will create the object (generating the objectID and using the attributes as defined in the object). WHen false, a partial update on a nonexistent object will be ignored (but no error will be sent back).</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.PartialUpdateObjects``1(System.Collections.Generic.IEnumerable{``0},Algolia.Search.Http.RequestOptions,System.Boolean)">
            <summary>
            Update one or more attributes of an existing object.
            This method enables you to update only a part of an object by singling out one or more attributes of an existing object and performing the following actions:
            </summary>
            <typeparam name="T">Type of the data to send/retrieve</typeparam>
            <param name="data">Data to send</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="createIfNotExists">When true, a partial update on a nonexistent object will create the object (generating the objectID and using the attributes as defined in the object). WHen false, a partial update on a nonexistent object will be ignored (but no error will be sent back).</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.PartialUpdateObjectsAsync``1(System.Collections.Generic.IEnumerable{``0},Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken,System.Boolean)">
            <summary>
            Update one or more attributes of an existing object.
            This method enables you to update only a part of an object by singling out one or more attributes of an existing object and performing the following actions:
            </summary>
            <typeparam name="T">Type of the data to send/retrieve</typeparam>
            <param name="data">Data to send</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <param name="createIfNotExists">When true, a partial update on a nonexistent object will create the object (generating the objectID and using the attributes as defined in the object). WHen false, a partial update on a nonexistent object will be ignored (but no error will be sent back).</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.SaveObject``1(``0,Algolia.Search.Http.RequestOptions,System.Boolean)">
            <summary>
            This method allows you to create records on your index by sending one or more objects
            Each object contains a set of attributes and values, which represents a full record on an index.
            </summary>
            <typeparam name="T">Type of the data to send/retrieve</typeparam>
            <param name="data">Data to send</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="autoGenerateObjectId">Add objectID if not present</param>
            <returns></returns>>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.SaveObjectAsync``1(``0,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken,System.Boolean)">
            <summary>
            This method allows you to create records on your index by sending one or more objects
            Each object contains a set of attributes and values, which represents a full record on an index.
            </summary>
            <typeparam name="T">Type of the data to send/retrieve</typeparam>
            <param name="data">Data to send</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <param name="autoGenerateObjectId">Add objectID if not present</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.SaveObjects``1(System.Collections.Generic.IEnumerable{``0},Algolia.Search.Http.RequestOptions,System.Boolean)">
            <summary>
            This method allows you to create records on your index by sending one or more objects
            Each object contains a set of attributes and values, which represents a full record on an index.
            </summary>
            <typeparam name="T">Type of the data to send/retrieve</typeparam>
            <param name="data">Data to send</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="autoGenerateObjectId">Add objectIDs if not present</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.SaveObjectsAsync``1(System.Collections.Generic.IEnumerable{``0},Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken,System.Boolean)">
            <summary>
            This method allows you to create records on your index by sending one or more objects
            Each object contains a set of attributes and values, which represents a full record on an index.
            </summary>
            <typeparam name="T">Type of the data to send/retrieve</typeparam>
            <param name="data">Data to send</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <param name="autoGenerateObjectId">Add objectIDs if not present</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.ReplaceAllObjects``1(System.Collections.Generic.IEnumerable{``0},Algolia.Search.Http.RequestOptions,System.Boolean)">
            <summary>
            Push a new set of objects and remove all previous ones. Settings, synonyms and query rules are untouched.
            Replace all records in an index without any downtime.
            </summary>
            <param name="data">Data to send</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="safe">Run all api calls synchronously</param>
            <typeparam name="T">Type of the data to send/retrieve</typeparam>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.ReplaceAllObjectsAsync``1(System.Collections.Generic.IEnumerable{``0},Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken,System.Boolean)">
            <summary>
            Push a new set of objects and remove all previous ones. Settings, synonyms and query rules are untouched.
            Replace all records in an index without any downtime.
            </summary>
            <param name="data">Data to send</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <param name="safe">Run all api calls synchronously</param>
            <typeparam name="T">Type of the data to send/retrieve</typeparam>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.Batch``1(System.Collections.Generic.IEnumerable{Algolia.Search.Models.Batch.BatchOperation{``0}},Algolia.Search.Http.RequestOptions)">
            <summary>
            Batch the given request
            </summary>
            <typeparam name="T">Type of the object to send</typeparam>
            <param name="operations">Operations to send to the api</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.BatchAsync``1(System.Collections.Generic.IEnumerable{Algolia.Search.Models.Batch.BatchOperation{``0}},Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Perform several indexing operations in one API call.
            </summary>
            <typeparam name="T">Type of the object to send</typeparam>
            <param name="operations">Operations to send to the api</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.Batch``1(Algolia.Search.Models.Batch.BatchRequest{``0},Algolia.Search.Http.RequestOptions)">
            <summary>
            Perform several indexing operations in one API call.
            </summary>
            <typeparam name="T">Type of the object to send</typeparam>
            <param name="request">Request to send to the api</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.BatchAsync``1(Algolia.Search.Models.Batch.BatchRequest{``0},Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Perform several indexing operations in one API call.
            </summary>
            <typeparam name="T">Type of the object to send</typeparam>
            <param name="request">Batch request</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.DeleteObject(System.String,Algolia.Search.Http.RequestOptions)">
            <summary>
            Remove objects from an index using their object ids.
            </summary>
            <param name="objectId">Algolia's objectID</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.Delete(Algolia.Search.Http.RequestOptions)">
            <summary>
            Delete the index and all its settings, including links to its replicas.
            </summary>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.DeleteAsync(Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Delete the index and all its settings, including links to its replicas.
            </summary>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.DeleteObjectAsync(System.String,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Remove objects from an index using their object ids.
            </summary>
            <param name="objectId">Algolia's objectID</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.DeleteObjects(System.Collections.Generic.IEnumerable{System.String},Algolia.Search.Http.RequestOptions)">
            <summary>
            Remove objects from an index using their object ids.
            </summary>
            <param name="objectIds">List of objectId</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.DeleteObjectsAsync(System.Collections.Generic.IEnumerable{System.String},Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Remove objects from an index using their object ids.
            </summary>
            <param name="objectIds">List of objectId</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.DeleteBy(Algolia.Search.Models.Search.Query,Algolia.Search.Http.RequestOptions)">
            <summary>
            Remove all objects matching a filter (including geo filters).
            This method enables you to delete one or more objects based on filters (numeric, facet, tag or geo queries).
            It does not accept empty filters or a query.
            </summary>
            <param name="query">Search query</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.DeleteByAsync(Algolia.Search.Models.Search.Query,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Remove all objects matching a filter (including geo filters).
            This method enables you to delete one or more objects based on filters (numeric, facet, tag or geo queries).
            It does not accept empty filters or a query.
            </summary>
            <param name="query">Search query</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.ClearObjects(Algolia.Search.Http.RequestOptions)">
            <summary>
            Clear the records of an index without affecting its settings.
            This method enables you to delete an index’s contents (records) without removing any settings, rules and synonyms.
            </summary>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.ClearObjectsAsync(Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Clear the records of an index without affecting its settings.
            This method enables you to delete an index’s contents (records) without removing any settings, rules and synonyms.
            </summary>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.Search``1(Algolia.Search.Models.Search.Query,Algolia.Search.Http.RequestOptions)">
            <summary>
             Method used for querying an index.
            The search query only allows for the retrieval of up to 1000 hits.
            If you need to retrieve more than 1000 hits (e.g. for SEO), you can either leverage the Browse index method or increase the paginationLimitedTo parameter.
            </summary>
            <param name="query">Search query</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.SearchAsync``1(Algolia.Search.Models.Search.Query,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
             Method used for querying an index.
            The search query only allows for the retrieval of up to 1000 hits.
            If you need to retrieve more than 1000 hits (e.g. for SEO), you can either leverage the Browse index method or increase the paginationLimitedTo parameter.
            </summary>
            <param name="query">Search query</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.SearchForFacetValue(Algolia.Search.Models.Search.SearchForFacetRequest,Algolia.Search.Http.RequestOptions)">
            <summary>
            Search for a set of values within a given facet attribute. Can be combined with a query.
            This method enables you to search through the values of a facet attribute, selecting only a subset of those values that meet a given criteria.
            </summary>
            <param name="query">Search for facet query</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.SearchForFacetValueAsync(Algolia.Search.Models.Search.SearchForFacetRequest,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Search for a set of values within a given facet attribute. Can be combined with a query.
            This method enables you to search through the values of a facet attribute, selecting only a subset of those values that meet a given criteria.
            </summary>
            <param name="query">Search for facet query</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.GetObject``1(System.String,Algolia.Search.Http.RequestOptions,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Get one or more objects using their object ids.
            </summary>
            <param name="objectId">Algolia's objectID</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="attributesToRetrieve">List of attributes to retrieve. By default, all retrievable attributes are returned.</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.GetObjectAsync``1(System.String,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Get one or more objects using their object ids.
            </summary>
            <param name="objectId">Algolia's objectID</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <param name="attributesToRetrieve">List of attributes to retrieve. By default, all retrievable attributes are returned.</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.GetObjects``1(System.Collections.Generic.IEnumerable{System.String},Algolia.Search.Http.RequestOptions,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Retrieve one or more objects, potentially from the index, in a single API call.
            </summary>
            <param name="objectIDs"> ID of the object within that index</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="attributesToRetrieve">List of attributes to retrieve. By default, all retrievable attributes are returned.</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.GetObjectsAsync``1(System.Collections.Generic.IEnumerable{System.String},Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Retrieve one or more objects, potentially from the index, in a single API call.
            </summary>
            <param name="objectIDs">ID of the object within that index</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <param name="attributesToRetrieve">List of attributes to retrieve. By default, all retrievable attributes are returned.</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.Browse``1(Algolia.Search.Models.Common.BrowseIndexQuery)">
            <summary>
            This method allows you to retrieve all index content
            It can retrieve up to 1,000 records per call and supports full text search and filters.
            You can use the same query parameters as for a search query.
            </summary>
            <param name="query">Browse index query</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.BrowseFrom``1(Algolia.Search.Models.Common.BrowseIndexQuery,Algolia.Search.Http.RequestOptions)">
            <summary>
            This method allows you to retrieve all index content
            It can retrieve up to 1,000 records per call and supports full text search and filters.
            You can use the same query parameters as for a search query.
            </summary>
            <param name="query">Browse index query</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.BrowseFromAsync``1(Algolia.Search.Models.Common.BrowseIndexQuery,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            This method allows you to retrieve all index content
            It can retrieve up to 1,000 records per call and supports full text search and filters.
            You can use the same query parameters as for a search query.
            </summary>
            <param name="query">Browse index query</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.GetRule(System.String,Algolia.Search.Http.RequestOptions)">
            <summary>
            Get the specified by its objectID
            </summary>
            <param name="objectId">Algolia's objectID</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.GetRuleAsync(System.String,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Get the specified rule by its objectID
            </summary>
            <param name="objectId">Algolia's objectID</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.BrowseRules(Algolia.Search.Http.RequestOptions)">
            <summary>
            Retrieve an index’s full list of rules using an iterator.
            The list contains the rule name, plus the complete details of its conditions and consequences.
            The list includes all rules, whether created on the dashboard or pushed by the API.
            </summary>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.SearchRule(Algolia.Search.Models.Rules.RuleQuery,Algolia.Search.Http.RequestOptions)">
            <summary>
            Search for rules matching various criteria.
            </summary>
            <param name="query"></param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.SearchRuleAsync(Algolia.Search.Models.Rules.RuleQuery,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Search for rules matching various criteria.
            </summary>
            <param name="query">Rule query</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.SaveRule(Algolia.Search.Models.Rules.Rule,Algolia.Search.Http.RequestOptions,System.Boolean)">
            <summary>
            Create or update a single rule.
            </summary>
            <param name="rule">Query rule</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="forwardToReplicas">Forward the request to the replicas</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.SaveRuleAsync(Algolia.Search.Models.Rules.Rule,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken,System.Boolean)">
            <summary>
            Create or update a single rule.
            </summary>
            <param name="rule">Query rule</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <param name="forwardToReplicas">Forward the request to the replicas</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.SaveRules(System.Collections.Generic.IEnumerable{Algolia.Search.Models.Rules.Rule},Algolia.Search.Http.RequestOptions,System.Boolean,System.Boolean)">
            <summary>
            Create or update a specified set of rules, or all rules.
            </summary>
            <param name="rules">List of rules</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="forwardToReplicas">Forward to the replicas the request</param>
            <param name="clearExistingRules">Clear all existing rules</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.SaveRulesAsync(System.Collections.Generic.IEnumerable{Algolia.Search.Models.Rules.Rule},Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken,System.Boolean,System.Boolean)">
            <summary>
            Create or update a specified set of rules, or all rules.
            </summary>
            <param name="rules">List of rules</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <param name="forwardToReplicas">Forward to the replicas the request</param>
            <param name="clearExistingRules">Clear all existing rules</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.ReplaceAllRules(System.Collections.Generic.IEnumerable{Algolia.Search.Models.Rules.Rule},Algolia.Search.Http.RequestOptions,System.Boolean)">
            <summary>
            Push a new set of rules and erase all previous ones.
            This method, like replaceAllObjects, guarantees zero downtime.
            All existing rules are deleted and replaced with the new ones, in a single, atomic operation
            </summary>
            <param name="rules">List of rules</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="forwardToReplicas">Forward to the replicas the request</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.ReplaceAllRulesAsync(System.Collections.Generic.IEnumerable{Algolia.Search.Models.Rules.Rule},Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken,System.Boolean)">
            <summary>
            Push a new set of rules and erase all previous ones.
            This method, like replaceAllObjects, guarantees zero downtime.
            All existing rules are deleted and replaced with the new ones, in a single, atomic operation
            </summary>
            <param name="rules">List of rules</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <param name="forwardToReplicas">Forward to the replicas the request</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.DeleteRule(System.String,Algolia.Search.Http.RequestOptions,System.Boolean)">
            <summary>
            Delete the rule for the given ruleId
            </summary>
            <param name="objectId">Algolia's objectID</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="forwardToReplicas">Forward the request to the replicas</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.DeleteRuleAsync(System.String,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken,System.Boolean)">
            <summary>
            Delete the rule for the given ruleId
            </summary>
            <param name="objectId">Algolia's objectID</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <param name="forwardToReplicas">Forward the request to the replicas</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.ClearRules(Algolia.Search.Http.RequestOptions,System.Boolean)">
            <summary>
            Delete all rules in an index.
            </summary>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="forwardToReplicas">Forward the request to the replicas</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.ClearRulesAsync(Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken,System.Boolean)">
            <summary>
            Delete all rules in an index.
            </summary>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <param name="forwardToReplicas">Forward the request to the replicas</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.GetSettings(Algolia.Search.Http.RequestOptions)">
            <summary>
            Get settings for the given index
            </summary>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.GetSettingsAsync(Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Get settings for the given index
            </summary>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.SetSettings(Algolia.Search.Models.Settings.IndexSettings,Algolia.Search.Http.RequestOptions,System.Boolean)">
            <summary>
            Create or change an index’s settings.
            Only specified settings are overridden; unspecified settings are left unchanged.
            Specifying null for a setting resets it to its default value.
            </summary>
            <param name="settings">Algolia's index settings</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="forwardToReplicas">Forward to the replicas the request</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.SetSettingsAsync(Algolia.Search.Models.Settings.IndexSettings,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken,System.Boolean)">
            <summary>
            Create or change an index’s settings.
            Only specified settings are overridden; unspecified settings are left unchanged.
            Specifying null for a setting resets it to its default value.
            </summary>
            <param name="settings">Algolia's index settings</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <param name="forwardToReplicas">Forward to the replicas the request</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.SearchSynonyms(Algolia.Search.Models.Synonyms.SynonymQuery,Algolia.Search.Http.RequestOptions)">
            <summary>
            Get all synonyms that match a query.
            </summary>
            <param name="query">Synonym query</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.SearchSynonymsAsync(Algolia.Search.Models.Synonyms.SynonymQuery,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Get all synonyms that match a query.
            </summary>
            <param name="query">Synonym query</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.GetSynonym(System.String,Algolia.Search.Http.RequestOptions)">
            <summary>
            Get a single synonym using its object id.
            </summary>
            <param name="synonymObjectId">The synonym objectID</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.GetSynonymAsync(System.String,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Get a single synonym using its object id.
            </summary>
            <param name="synonymObjectId">The synonym objectID</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.BrowseSynonyms(Algolia.Search.Http.RequestOptions)">
            <summary>
            Retrieve an index’s complete list of synonyms.
            The list includes all synonyms - whether created on the dashboard or pushed by the API.
            The method returns an iterator.
            </summary>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.SaveSynonyms(System.Collections.Generic.IEnumerable{Algolia.Search.Models.Synonyms.Synonym},Algolia.Search.Http.RequestOptions,System.Boolean,System.Boolean)">
            <summary>
            Create or update multiple synonyms.
            </summary>
            <param name="synonyms">List of synonyms</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="forwardToReplicas">Forward to the replicas the request</param>
            <param name="replaceExistingSynonyms"></param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.SaveSynonymsAsync(System.Collections.Generic.IEnumerable{Algolia.Search.Models.Synonyms.Synonym},Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken,System.Boolean,System.Boolean)">
            <summary>
            Create or update multiple synonyms.
            </summary>
            <param name="synonyms">List of synonyms</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <param name="forwardToReplicas">Forward to the replicas the request</param>
            <param name="replaceExistingSynonyms">Replace all existing synonyms</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.ReplaceAllSynonyms(System.Collections.Generic.IEnumerable{Algolia.Search.Models.Synonyms.Synonym},Algolia.Search.Http.RequestOptions,System.Boolean)">
            <summary>
            Push a new set of synonyms and erase all previous ones.
            This method, like replaceAllObjects, guarantees zero downtime.
            All existing synonyms are deleted and replaced with the new ones, in a single, atomic operation
            </summary>
            <param name="synonyms">List of synonyms</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="forwardToReplicas">Forward to the replicas the request</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.ReplaceAllSynonymsAsync(System.Collections.Generic.IEnumerable{Algolia.Search.Models.Synonyms.Synonym},Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken,System.Boolean)">
            <summary>
            Push a new set of synonyms and erase all previous ones.
            This method, like replaceAllObjects, guarantees zero downtime.
            All existing synonyms are deleted and replaced with the new ones, in a single, atomic operation
            </summary>
            <param name="synonyms">List of synonyms</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <param name="forwardToReplicas">Forward to the replicas the request</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.SaveSynonym(Algolia.Search.Models.Synonyms.Synonym,Algolia.Search.Http.RequestOptions,System.Boolean)">
            <summary>
            Create or update a single synonym on an index.
            </summary>
            <param name="synonym">Algolia's synonym</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="forwardToReplicas">Forward the request to the replicas</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.SaveSynonymAsync(Algolia.Search.Models.Synonyms.Synonym,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken,System.Boolean)">
            <summary>
            Create or update a single synonym on an index.
            </summary>
            <param name="synonym">Algolia's synonym</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <param name="forwardToReplicas">Forward the request to the replicas</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.DeleteSynonym(System.String,Algolia.Search.Http.RequestOptions,System.Boolean)">
            <summary>
            Remove a single synonym from an index using its object id.
            </summary>
            <param name="synonymObjectId">The synonym objectID</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="forwardToReplicas">Forward the request to the replicas</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.DeleteSynonymAsync(System.String,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken,System.Boolean)">
            <summary>
            Remove a single synonym from an index using its object id.
            </summary>
            <param name="synonymObjectId">The synonym objectID</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <param name="forwardToReplicas">Forward the request to the replicas</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.ClearSynonyms(Algolia.Search.Http.RequestOptions,System.Boolean)">
            <summary>
            Remove all synonyms from an index.
            </summary>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="forwardToReplicas">Forward the request to the replicas</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.ClearSynonymsAsync(Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken,System.Boolean)">
            <summary>
            Remove all synonyms from an index.
            </summary>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <param name="forwardToReplicas">Forward the request to the replicas</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.MoveFrom(System.String,Algolia.Search.Http.RequestOptions)">
            <summary>
            Rename an index. Normally used to reindex your data atomically, without any down time.
            </summary>
            <param name="sourceIndex"></param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.MoveFromAsync(System.String,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Rename an index. Normally used to reindex your data atomically, without any down time.
            </summary>
            <param name="sourceIndex"></param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.WaitTask(System.Int64,System.Int32,Algolia.Search.Http.RequestOptions)">
            <summary>
            Wait for a task to complete before executing the next line of code, to synchronize index updates.
            All write operations in Algolia are asynchronous by design.
            </summary>
            <param name="taskId"></param>
            <param name="timeToWait"></param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.WaitTaskAsync(System.Int64,System.Int32,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Wait for a task to complete before executing the next line of code, to synchronize index updates.
            All write operations in Algolia are asynchronous by design.
            </summary>
            <param name="taskId">The task ID to wait</param>
            <param name="timeToWait"></param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.GetTask(System.Int64,Algolia.Search.Http.RequestOptions)">
            <summary>
            Get the status of the given task
            </summary>
            <param name="taskId"></param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.ISearchIndex.GetTaskAsync(System.Int64,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Get the status of the given task
            </summary>
            <param name="taskId"></param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:Algolia.Search.Clients.SearchClient">
            <summary>
            Algolia search client implementation of <see cref="T:Algolia.Search.Clients.ISearchClient"/>
            </summary>
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.#ctor(System.String,System.String)">
            <summary>
            Create a new search client for the given appID
            </summary>
            <param name="applicationId">Your application</param>
            <param name="apiKey">Your API key</param>
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.#ctor(Algolia.Search.Clients.SearchConfig)">
            <summary>
            Initialize a client with custom config
            </summary>
            <param name="config">Algolia configuration</param>
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.#ctor(Algolia.Search.Clients.SearchConfig,Algolia.Search.Http.IHttpRequester)">
            <summary>
            Initialize the client with custom config and custom Requester
            </summary>
            <param name="config">Algolia Config</param>
            <param name="httpRequester">Your Http requester implementation of <see cref="T:Algolia.Search.Http.IHttpRequester"/></param>
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.InitIndex(System.String)">
            <summary>
            Initialize an index for the given client
            </summary>
            <param name="indexName">Your index name</param>
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.MultipleGetObjects``1(System.Collections.Generic.IEnumerable{Algolia.Search.Models.Common.MultipleGetObject},Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.MultipleGetObjectsAsync``1(System.Collections.Generic.IEnumerable{Algolia.Search.Models.Common.MultipleGetObject},Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.MultipleQueries``1(Algolia.Search.Models.Common.MultipleQueriesRequest,Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.MultipleQueriesAsync``1(Algolia.Search.Models.Common.MultipleQueriesRequest,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.MultipleBatch``1(System.Collections.Generic.IEnumerable{Algolia.Search.Models.Batch.BatchOperation{``0}},Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.MultipleBatchAsync``1(System.Collections.Generic.IEnumerable{Algolia.Search.Models.Batch.BatchOperation{``0}},Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.ListIndices(Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.ListIndicesAsync(Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.GenerateSecuredApiKeys(System.String,Algolia.Search.Models.ApiKeys.SecuredApiKeyRestriction)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.ListApiKeys(Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.ListApiKeysAsync(Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.GetApiKey(System.String,Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.GetApiKeyAsync(System.String,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.AddApiKey(Algolia.Search.Models.ApiKeys.ApiKey,Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.AddApiKeyAsync(Algolia.Search.Models.ApiKeys.ApiKey,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.UpdateApiKey(Algolia.Search.Models.ApiKeys.ApiKey,Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.UpdateApiKeyAsync(Algolia.Search.Models.ApiKeys.ApiKey,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.DeleteApiKey(System.String,Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.DeleteApiKeyAsync(System.String,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.RestoreApiKey(System.String,Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.RestoreApiKeyAsync(System.String,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.ListClusters(Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.ListClustersAsync(Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.SearchUserIDs(Algolia.Search.Models.Mcm.SearchUserIdsRequest,Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.SearchUserIDsAsync(Algolia.Search.Models.Mcm.SearchUserIdsRequest,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.ListUserIds(System.Int32,System.Int32,Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.ListUserIdsAsync(System.Int32,System.Int32,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.GetUserId(System.String,Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.GetUserIdAsync(System.String,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.GetTopUserId(Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.GetTopUserIdAsync(Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.AssignUserId(System.String,System.String,Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.AssignUserIdAsync(System.String,System.String,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.RemoveUserId(System.String,Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.RemoveUserIdAsync(System.String,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.GetLogs(Algolia.Search.Http.RequestOptions,System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.GetLogsAsync(Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken,System.Int32,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.CopySettings(System.String,System.String,Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.CopySettingsAsync(System.String,System.String,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.CopyRules(System.String,System.String,Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.CopyRulesAsync(System.String,System.String,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.CopySynonyms(System.String,System.String,Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.CopySynonymsAsync(System.String,System.String,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.CopyIndex(System.String,System.String,Algolia.Search.Http.RequestOptions,System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.CopyIndexAsync(System.String,System.String,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken,System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.MoveIndex(System.String,System.String,Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.MoveIndexAsync(System.String,System.String,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.GetPersonalizationStrategy(Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.GetPersonalizationStrategyAsync(Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.SetPersonalizationStrategy(Algolia.Search.Models.Personalization.SetStrategyRequest,Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.SetPersonalizationStrategyAsync(Algolia.Search.Models.Personalization.SetStrategyRequest,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.WaitTask(System.String,System.Int64,System.Int32,Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.CustomRequest``2(``1,System.String,System.Net.Http.HttpMethod,Algolia.Search.Models.Enums.CallType,Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchClient.CustomRequestAsync``2(``1,System.String,System.Net.Http.HttpMethod,Algolia.Search.Models.Enums.CallType,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Algolia.Search.Clients.SearchConfig">
            <summary>
            Search client configuration
            </summary>
        </member>
        <member name="M:Algolia.Search.Clients.SearchConfig.#ctor(System.String,System.String)">
            <summary>
            The configuration of the search client
            A client should have it's own configuration ie on configuration per client instance
            </summary>
            <param name="applicationId">Your application ID</param>
            <param name="apiKey">Your API Key</param>
        </member>
        <member name="T:Algolia.Search.Clients.SearchIndex">
            <summary>
            Search Index implementation of <see cref="T:Algolia.Search.Clients.ISearchIndex"/>
            </summary>
        </member>
        <member name="P:Algolia.Search.Clients.SearchIndex.Config">
            <summary>
            Index configuration
            </summary>
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.#ctor(Algolia.Search.Transport.IHttpTransport,Algolia.Search.Clients.AlgoliaConfig,System.String)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.PartialUpdateObject``1(``0,Algolia.Search.Http.RequestOptions,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.PartialUpdateObjectAsync``1(``0,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.PartialUpdateObjects``1(System.Collections.Generic.IEnumerable{``0},Algolia.Search.Http.RequestOptions,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.PartialUpdateObjectsAsync``1(System.Collections.Generic.IEnumerable{``0},Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.SaveObject``1(``0,Algolia.Search.Http.RequestOptions,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.SaveObjectAsync``1(``0,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.SaveObjects``1(System.Collections.Generic.IEnumerable{``0},Algolia.Search.Http.RequestOptions,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.SaveObjectsAsync``1(System.Collections.Generic.IEnumerable{``0},Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.ReplaceAllObjects``1(System.Collections.Generic.IEnumerable{``0},Algolia.Search.Http.RequestOptions,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.ReplaceAllObjectsAsync``1(System.Collections.Generic.IEnumerable{``0},Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.Batch``1(System.Collections.Generic.IEnumerable{Algolia.Search.Models.Batch.BatchOperation{``0}},Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.BatchAsync``1(System.Collections.Generic.IEnumerable{Algolia.Search.Models.Batch.BatchOperation{``0}},Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.Batch``1(Algolia.Search.Models.Batch.BatchRequest{``0},Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.SplitIntoBatchesAsync``1(System.Collections.Generic.IEnumerable{``0},System.String,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Split records into smaller chunks before sending them to the API
            </summary>
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.BatchAsync``1(Algolia.Search.Models.Batch.BatchRequest{``0},Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.DeleteObject(System.String,Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.DeleteObjectAsync(System.String,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.DeleteObjects(System.Collections.Generic.IEnumerable{System.String},Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.DeleteObjectsAsync(System.Collections.Generic.IEnumerable{System.String},Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.Delete(Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.DeleteAsync(Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.DeleteBy(Algolia.Search.Models.Search.Query,Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.DeleteByAsync(Algolia.Search.Models.Search.Query,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.ClearObjects(Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.ClearObjectsAsync(Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.Search``1(Algolia.Search.Models.Search.Query,Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.SearchAsync``1(Algolia.Search.Models.Search.Query,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.SearchForFacetValue(Algolia.Search.Models.Search.SearchForFacetRequest,Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.SearchForFacetValueAsync(Algolia.Search.Models.Search.SearchForFacetRequest,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.GetObject``1(System.String,Algolia.Search.Http.RequestOptions,System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.GetObjectAsync``1(System.String,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken,System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.GetObjects``1(System.Collections.Generic.IEnumerable{System.String},Algolia.Search.Http.RequestOptions,System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.GetObjectsAsync``1(System.Collections.Generic.IEnumerable{System.String},Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken,System.Collections.Generic.IEnumerable{System.String})">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.Browse``1(Algolia.Search.Models.Common.BrowseIndexQuery)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.BrowseFrom``1(Algolia.Search.Models.Common.BrowseIndexQuery,Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.BrowseFromAsync``1(Algolia.Search.Models.Common.BrowseIndexQuery,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.GetRule(System.String,Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.GetRuleAsync(System.String,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.BrowseRules(Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.SearchRule(Algolia.Search.Models.Rules.RuleQuery,Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.SearchRuleAsync(Algolia.Search.Models.Rules.RuleQuery,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.SaveRule(Algolia.Search.Models.Rules.Rule,Algolia.Search.Http.RequestOptions,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.SaveRuleAsync(Algolia.Search.Models.Rules.Rule,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.SaveRules(System.Collections.Generic.IEnumerable{Algolia.Search.Models.Rules.Rule},Algolia.Search.Http.RequestOptions,System.Boolean,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.SaveRulesAsync(System.Collections.Generic.IEnumerable{Algolia.Search.Models.Rules.Rule},Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken,System.Boolean,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.ReplaceAllRules(System.Collections.Generic.IEnumerable{Algolia.Search.Models.Rules.Rule},Algolia.Search.Http.RequestOptions,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.ReplaceAllRulesAsync(System.Collections.Generic.IEnumerable{Algolia.Search.Models.Rules.Rule},Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.DeleteRule(System.String,Algolia.Search.Http.RequestOptions,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.DeleteRuleAsync(System.String,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.ClearRules(Algolia.Search.Http.RequestOptions,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.ClearRulesAsync(Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.GetSettings(Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.GetSettingsAsync(Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.SetSettings(Algolia.Search.Models.Settings.IndexSettings,Algolia.Search.Http.RequestOptions,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.SetSettingsAsync(Algolia.Search.Models.Settings.IndexSettings,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.SearchSynonyms(Algolia.Search.Models.Synonyms.SynonymQuery,Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.SearchSynonymsAsync(Algolia.Search.Models.Synonyms.SynonymQuery,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.GetSynonym(System.String,Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.GetSynonymAsync(System.String,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.BrowseSynonyms(Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.SaveSynonyms(System.Collections.Generic.IEnumerable{Algolia.Search.Models.Synonyms.Synonym},Algolia.Search.Http.RequestOptions,System.Boolean,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.SaveSynonymsAsync(System.Collections.Generic.IEnumerable{Algolia.Search.Models.Synonyms.Synonym},Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken,System.Boolean,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.ReplaceAllSynonyms(System.Collections.Generic.IEnumerable{Algolia.Search.Models.Synonyms.Synonym},Algolia.Search.Http.RequestOptions,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.ReplaceAllSynonymsAsync(System.Collections.Generic.IEnumerable{Algolia.Search.Models.Synonyms.Synonym},Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.SaveSynonym(Algolia.Search.Models.Synonyms.Synonym,Algolia.Search.Http.RequestOptions,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.SaveSynonymAsync(Algolia.Search.Models.Synonyms.Synonym,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.DeleteSynonym(System.String,Algolia.Search.Http.RequestOptions,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.DeleteSynonymAsync(System.String,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.ClearSynonyms(Algolia.Search.Http.RequestOptions,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.ClearSynonymsAsync(Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.CopyTo(System.String,Algolia.Search.Http.RequestOptions,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Make a copy of an index, including its objects, settings, synonyms, and query rules.
            </summary>
            <param name="destinationIndex">The destination index</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="scope">The scope copy</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.CopyToAsync(System.String,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Make a copy of an index, including its objects, settings, synonyms, and query rules.
            </summary>
            <param name="destinationIndex">The destination index</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
            <param name="scope">The scope copy</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.MoveFrom(System.String,Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.MoveFromAsync(System.String,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.WaitTask(System.Int64,System.Int32,Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.WaitTaskAsync(System.Int64,System.Int32,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.GetTask(System.Int64,Algolia.Search.Http.RequestOptions)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Clients.SearchIndex.GetTaskAsync(System.Int64,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:Algolia.Search.Clients.UserInsightsClient">
            <summary>
            Describe a user identifier class.
            </summary>
        </member>
        <member name="M:Algolia.Search.Clients.UserInsightsClient.#ctor(System.String,Algolia.Search.Clients.InsightsClient)">
            <summary>
            Create an instance for a user identifier
            </summary>
            <param name="userToken">A user identifier, format [a-zA-Z0-9_-]{1,64}.</param>
            <param name="insightsClient">The insights client</param>
        </member>
        <member name="M:Algolia.Search.Clients.UserInsightsClient.ClickedFilters(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Algolia.Search.Http.RequestOptions)">
            <summary>
            Send events when filters are clicked
            </summary>
            <param name="eventName">User defined string, format: any ascii char except control points with length between 1 and 64.</param>
            <param name="indexName">Index name, format, same as the engine.</param>
            <param name="filters">A filter is defined by the ${attr}${op}${value} string e.g. brand:apple. Limited to 10 filters.</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.UserInsightsClient.ClickedFiltersAsync(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Send events when filters are clicked
            </summary>
            <param name="eventName">User defined string, format: any ascii char except control points with length between 1 and 64.</param>
            <param name="indexName">Index name, format, same as the engine.</param>
            <param name="filters">A filter is defined by the ${attr}${op}${value} string e.g. brand:apple. Limited to 10 filters.</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.UserInsightsClient.ClickedObjectIDs(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Algolia.Search.Http.RequestOptions)">
            <summary>
            Send events when objectIDs are clicked
            </summary>
            <param name="eventName">User defined string, format: any ascii char except control points with length between 1 and 64.</param>
            <param name="indexName">Index name, format, same as the engine.</param>
            <param name="objectIDs">Array of index objectIDs. Limited to 20 objects</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.UserInsightsClient.ClickedObjectIDsAsync(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Send events when objectIDs are clicked
            </summary>
            <param name="eventName">User defined string, format: any ascii char except control points with length between 1 and 64.</param>
            <param name="indexName">Index name, format, same as the engine.</param>
            <param name="objectIDs">Array of index objectIDs. Limited to 20 objects</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.UserInsightsClient.ClickedObjectIDsAfterSearch(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.UInt32},System.String,Algolia.Search.Http.RequestOptions)">
            <summary>
            Send events after a search when objectIDs are clicked
            </summary>
            <param name="eventName">User defined string, format: any ascii char except control points with length between 1 and 64.</param>
            <param name="indexName">Index name, format, same as the engine.</param>
            <param name="objectIDs">Array of index objectIDs. Limited to 20 objects</param>
            <param name="positions">Position of the click in the list of Algolia search results</param>
            <param name="queryID">Algolia queryID, format: [a-z1-9]{32}.</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.UserInsightsClient.ClickedObjectIDsAfterSearchAsync(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.UInt32},System.String,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Send events after a search when objectIDs are clicked
            </summary>
            <param name="eventName">User defined string, format: any ascii char except control points with length between 1 and 64.</param>
            <param name="indexName">Index name, format, same as the engine.</param>
            <param name="objectIDs">Array of index objectIDs. Limited to 20 objects</param>
            <param name="positions">Position of the click in the list of Algolia search results</param>
            <param name="queryID">Algolia queryID, format: [a-z1-9]{32}.</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.UserInsightsClient.ConvertedObjectIDs(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Algolia.Search.Http.RequestOptions)">
            <summary>
            Send events of converted objectIDs
            </summary>
            <param name="eventName">User defined string, format: any ascii char except control points with length between 1 and 64.</param>
            <param name="indexName">Index name, format, same as the engine.</param>
            <param name="objectIDs">Array of index objectIDs. Limited to 20 objects</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.UserInsightsClient.ConvertedObjectIDsAsync(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Send events of converted objectIDs
            </summary>
            <param name="eventName">User defined string, format: any ascii char except control points with length between 1 and 64.</param>
            <param name="indexName">Index name, format, same as the engine.</param>
            <param name="objectIDs">Array of index objectIDs. Limited to 20 objects</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.UserInsightsClient.ConvertedObjectIDsAfterSearch(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.String,Algolia.Search.Http.RequestOptions)">
            <summary>
            Send events of converted objectIDs after a search
            </summary>
            <param name="eventName">User defined string, format: any ascii char except control points with length between 1 and 64.</param>
            <param name="indexName">Index name, format, same as the engine.</param>
            <param name="objectIDs">Array of index objectIDs. Limited to 20 objects</param>
            <param name="queryID">Algolia queryID, format: [a-z1-9]{32}.</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.UserInsightsClient.ConvertedObjectIDsAfterSearchAsync(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.String,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Send events of converted objectIDs after a search
            </summary>
            <param name="eventName">User defined string, format: any ascii char except control points with length between 1 and 64.</param>
            <param name="indexName">Index name, format, same as the engine.</param>
            <param name="objectIDs">Array of index objectIDs. Limited to 20 objects</param>
            <param name="queryID">Algolia queryID, format: [a-z1-9]{32}.</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.UserInsightsClient.ConvertedFilters(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Send events of filters conversion
            </summary>
            <param name="eventName">User defined string, format: any ascii char except control points with length between 1 and 64.</param>
            <param name="indexName">Index name, format, same as the engine.</param>
            <param name="filters">A filter is defined by the ${attr}${op}${value} string e.g. brand:apple. Limited to 10 filters.</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.UserInsightsClient.ConvertedFiltersAsync(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Send events of filters conversion
            </summary>
            <param name="eventName">User defined string, format: any ascii char except control points with length between 1 and 64.</param>
            <param name="indexName">Index name, format, same as the engine.</param>
            <param name="filters">A filter is defined by the ${attr}${op}${value} string e.g. brand:apple. Limited to 10 filters.</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.UserInsightsClient.ViewedFilters(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Algolia.Search.Http.RequestOptions)">
            <summary>
            Send events when filters are viewed
            </summary>
            <param name="eventName">User defined string, format: any ascii char except control points with length between 1 and 64.</param>
            <param name="indexName">Index name, format, same as the engine.</param>
            <param name="filters">A filter is defined by the ${attr}${op}${value} string e.g. brand:apple. Limited to 10 filters.</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.UserInsightsClient.ViewedFiltersAsync(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Send events when filters are viewed
            </summary>
            <param name="eventName">User defined string, format: any ascii char except control points with length between 1 and 64.</param>
            <param name="indexName">Index name, format, same as the engine.</param>
            <param name="filters">A filter is defined by the ${attr}${op}${value} string e.g. brand:apple. Limited to 10 filters.</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.UserInsightsClient.ViewedObjectIDs(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Algolia.Search.Http.RequestOptions)">
            <summary>
            Send events when objectIDs are viewed
            </summary>
            <param name="eventName">User defined string, format: any ascii char except control points with length between 1 and 64.</param>
            <param name="indexName">Index name, format, same as the engine.</param>
            <param name="objectIDs">Array of index objectIDs. Limited to 20 objects</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Clients.UserInsightsClient.ViewedObjectIDsAsync(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Send events when objectIDs are viewed
            </summary>
            <param name="eventName">User defined string, format: any ascii char except control points with length between 1 and 64.</param>
            <param name="indexName">Index name, format, same as the engine.</param>
            <param name="objectIDs">Array of index objectIDs. Limited to 20 objects</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">The cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:Algolia.Search.Exceptions.AlgoliaApiException">
            <summary>
            Exception sent by Algolia's API
            </summary>
        </member>
        <member name="P:Algolia.Search.Exceptions.AlgoliaApiException.HttpErrorCode">
            <summary>
            Http error code
            </summary>
        </member>
        <member name="M:Algolia.Search.Exceptions.AlgoliaApiException.#ctor">
            <summary>
            Algolia's Execption
            </summary>
        </member>
        <member name="M:Algolia.Search.Exceptions.AlgoliaApiException.#ctor(System.String)">
            <summary>
            Create a new Algolia's api exception.
            </summary>
            <param name="message">The exception details.</param>
        </member>
        <member name="M:Algolia.Search.Exceptions.AlgoliaApiException.#ctor(System.String,System.Exception)">
            <summary>
            Algolia API Exception
            </summary>
            <param name="message"></param>
            <param name="inner"></param>
        </member>
        <member name="M:Algolia.Search.Exceptions.AlgoliaApiException.#ctor(System.String,System.Int32)">
            <summary>
            Ctor with error code and message
            </summary>
            <param name="message"></param>
            <param name="httpErrorCode"></param>
        </member>
        <member name="T:Algolia.Search.Exceptions.AlgoliaException">
            <summary>
            Algolia exception.
            </summary>
        </member>
        <member name="M:Algolia.Search.Exceptions.AlgoliaException.#ctor">
            <summary>
            Algolia's Execption
            </summary>
        </member>
        <member name="M:Algolia.Search.Exceptions.AlgoliaException.#ctor(System.String)">
            <summary>
            Create a new Algolia exception.
            </summary>
            <param name="message">The exception details.</param>
        </member>
        <member name="M:Algolia.Search.Exceptions.AlgoliaException.#ctor(System.String,System.Exception)">
            <summary>
            Algolia Exception
            </summary>
            <param name="message"></param>
            <param name="inner"></param>
        </member>
        <member name="T:Algolia.Search.Exceptions.AlgoliaUnreachableHostException">
            <summary>
            Exception thrown when an host in unreachable
            </summary>
        </member>
        <member name="M:Algolia.Search.Exceptions.AlgoliaUnreachableHostException.#ctor">
            <summary>
            Algolia's Execption
            </summary>
        </member>
        <member name="M:Algolia.Search.Exceptions.AlgoliaUnreachableHostException.#ctor(System.String)">
            <summary>
            Create a new AlgoliaUnreachableHostException.
            </summary>
            <param name="message">The exception details.</param>
        </member>
        <member name="M:Algolia.Search.Exceptions.AlgoliaUnreachableHostException.#ctor(System.String,System.Exception)">
            <summary>
            AlgoliaUnreachableHostException
            </summary>
            <param name="message"></param>
            <param name="inner"></param>
        </member>
        <member name="T:Algolia.Search.Http.AlgoliaHttpRequester">
            <summary>
            Algolia's HTTP requester
            You can inject your own by the SearchClient or Analytics Client
            </summary>
        </member>
        <member name="F:Algolia.Search.Http.AlgoliaHttpRequester._httpClient">
            <summary>
            https://docs.microsoft.com/en-gb/aspnet/web-api/overview/advanced/calling-a-web-api-from-a-net-client
            </summary>
        </member>
        <member name="M:Algolia.Search.Http.AlgoliaHttpRequester.SendRequestAsync(Algolia.Search.Models.Common.Request,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Don't use it directly
            Send request to the REST API
            </summary>
            <param name="request">Request</param>
            <param name="totalTimeout">Timeout in seconds</param>
            <param name="ct">Optional cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:Algolia.Search.Http.AlgoliaHttpResponse">
            <summary>
            Response from Algolia's API
            </summary>
        </member>
        <member name="P:Algolia.Search.Http.AlgoliaHttpResponse.HttpStatusCode">
            <summary>
            Http response code
            </summary>
        </member>
        <member name="P:Algolia.Search.Http.AlgoliaHttpResponse.Body">
            <summary>
            Stream Response body
            </summary>
        </member>
        <member name="P:Algolia.Search.Http.AlgoliaHttpResponse.IsTimedOut">
            <summary>
            TimeOut
            </summary>
        </member>
        <member name="P:Algolia.Search.Http.AlgoliaHttpResponse.Error">
            <summary>
            Http Error message
            </summary>
        </member>
        <member name="T:Algolia.Search.Http.HttpRequestExtensions">
            <summary>
            This class allow to handle timeout per request
            https://www.thomaslevesque.com/2018/02/25/better-timeout-handling-with-httpclient/
            </summary>
        </member>
        <member name="M:Algolia.Search.Http.HttpRequestHeadersExtensions.Fill(System.Net.Http.Headers.HttpRequestHeaders,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Extension method to easily fill the HttpRequesterHeaders object
            </summary>
            <param name="headers"></param>
            <param name="dictionary"></param>
            <returns></returns>
        </member>
        <member name="T:Algolia.Search.Http.IHttpRequester">
            <summary>
            Interface that allow users to inject their custom http requester
            Don't use directly, use AlgoliaClient to make request with the retry strategy
            </summary>
        </member>
        <member name="M:Algolia.Search.Http.IHttpRequester.SendRequestAsync(Algolia.Search.Models.Common.Request,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Sends the HTTP request
            </summary>
            <param name="request">Request object</param>
            <param name="totalTimeout">Timeout in seconds</param>
            <param name="ct">Optional cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:Algolia.Search.Http.RequestOptions">
            <summary>
            Request option you can add to your queries
            </summary>
        </member>
        <member name="P:Algolia.Search.Http.RequestOptions.Headers">
            <summary>
            Custom headers will override default headers if they exist
            </summary>
        </member>
        <member name="P:Algolia.Search.Http.RequestOptions.QueryParameters">
            <summary>
            Add custom queries parameters
            </summary>
        </member>
        <member name="P:Algolia.Search.Http.RequestOptions.Timeout">
            <summary>
            Request timeout in seconds
            </summary>
        </member>
        <member name="T:Algolia.Search.Http.TimeoutHandler">
            <summary>
            This class allow to handle timeout per request
            https://www.thomaslevesque.com/2018/02/25/better-timeout-handling-with-httpclient/
            </summary>
        </member>
        <member name="T:Algolia.Search.Iterators.IndexIterator`1">
            <summary>
            Algolia's iterator for indew
            </summary>
            <typeparam name="T">Type of the data to send/retrieve</typeparam>
        </member>
        <member name="M:Algolia.Search.Iterators.IndexIterator`1.#ctor(Algolia.Search.Clients.ISearchIndex,Algolia.Search.Models.Common.BrowseIndexQuery)">
            <summary>
            Create a new instance of the iterator
            </summary>
            <param name="index">The index to browse</param>
            <param name="query">The browse query</param>
        </member>
        <member name="M:Algolia.Search.Iterators.IndexIterator`1.GetEnumerator">
            <inheritdoc />
            <summary>
            GetEnumerator perfom a browse from (api call)
            </summary>
        </member>
        <member name="T:Algolia.Search.Iterators.RulesIterator">
            <summary>
            Algolia's rule iterator
            </summary>
        </member>
        <member name="M:Algolia.Search.Iterators.RulesIterator.#ctor(Algolia.Search.Clients.ISearchIndex,System.Int32,Algolia.Search.Http.RequestOptions)">
            <summary>
            Create an instance of the rule iterator
            </summary>
            <param name="index">The index to fetch the rule from</param>
            <param name="hitsPerpage">Hits per page for each call default = 1000</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
        </member>
        <member name="M:Algolia.Search.Iterators.RulesIterator.GetEnumerator">
            <inheritdoc />
            <summary>
            Iterator perform an api call
            </summary>
        </member>
        <member name="T:Algolia.Search.Iterators.SynonymsIterator">
            <summary>
            Algolia's synonym iterator
            </summary>
        </member>
        <member name="M:Algolia.Search.Iterators.SynonymsIterator.#ctor(Algolia.Search.Clients.ISearchIndex,System.Int32,Algolia.Search.Http.RequestOptions)">
            <summary>
            Create a new instance of a synonym iterator
            </summary>
            <param name="index">The index to fetch the synonym from</param>
            <param name="hitsPerpage">Hits per page for each call default = 1000</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
        </member>
        <member name="M:Algolia.Search.Iterators.SynonymsIterator.GetEnumerator">
            <inheritdoc />
            <summary>
            Iterator for synonym (perfom an api call)
            </summary>
            <returns></returns>
        </member>
        <member name="T:Algolia.Search.Models.Analytics.ABTest">
            <summary>
            https://www.algolia.com/doc/rest-api/ab-test/
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Analytics.ABTest.Name">
            <summary>
            AB Test name.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Analytics.ABTest.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Analytics.ABTest.Variants">
            <summary>
            List of variants for the ab test
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Analytics.ABTest.EndAt">
            <summary>
            End date for the AB Test
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Analytics.ABTest.CreatedAt">
            <summary>
            Date of creation
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Analytics.ABTest.AbTestId">
            <summary>
            Ab test ID
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Analytics.ABTest.ClickSignificance">
            <summary>
            ABTest significance based on click data. Should be > 0.95 to be considered significant (no matter which variant is winning).
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Analytics.ABTest.ConversionSignificance">
            <summary>
            ABTest significance based on conversion data. Should be > 0.95 to be considered significant (no matter which variant is winning)
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Analytics.ABTestsReponse">
            <summary>
            Api response
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Analytics.ABTestsReponse.Count">
            <summary>
            The count
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Analytics.ABTestsReponse.Total">
            <summary>
            The total
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Analytics.ABTestsReponse.ABTests">
            <summary>
            List of AbTests
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Analytics.AddABTestResponse">
            <summary>
            Api response
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Analytics.AddABTestResponse.ABTestId">
            <summary>
            The AbTest ID
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Analytics.AddABTestResponse.TaskID">
            <summary>
            The taskID
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Analytics.AddABTestResponse.Index">
            <summary>
            Index Name
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Analytics.DeleteABTestResponse">
            <summary>
            Api Response
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Analytics.DeleteABTestResponse.TaskID">
            <summary>
            The Task ID
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Analytics.DeleteABTestResponse.Index">
            <summary>
            Index Name
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Analytics.StopABTestResponse">
            <summary>
            Api response
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Analytics.StopABTestResponse.TaskID">
            <summary>
            The task ID
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Analytics.StopABTestResponse.Index">
            <summary>
            The index name
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Analytics.Variant">
            <summary>
            https://www.algolia.com/doc/api-reference/api-methods/add-ab-test/#method-param-variant
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Analytics.Variant.Index">
            <summary>
            The index name
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Analytics.Variant.TrafficPercentage">
            <summary>
            Percentage of the traffic that should be going to the variant. The sum of the percentage should be equal to 100.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Analytics.Variant.Description">
            <summary>
            Description of the variant. This is useful when seing the results in the dashboard or via the API.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Analytics.Variant.AverageClickPostion">
            <summary>
            Average click position for the variant.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Analytics.Variant.ClickCount">
            <summary>
            Distinct click count for the variant.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Analytics.Variant.ClickThroughRate">
            <summary>
            Click through rate for the variant.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Analytics.Variant.ConversionCount">
            <summary>
            Click through rate for the variant.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Analytics.Variant.ConversionRate">
            <summary>
            Distinct conversion count for the variant.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Analytics.Variant.NoResultCount">
            <summary>
            No result count
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Analytics.Variant.SearchCount">
            <summary>
            Search count
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Analytics.Variant.UserCount">
            <summary>
            user Count
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Analytics.Variant.CustomSearchParameters">
            <summary>
            Search parameters for AA Testing
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.ApiKeys.AddApiKeyResponse">
            <summary>
            Add api key api response
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.ApiKeys.AddApiKeyResponse.Key">
            <summary>
            The returned api key
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.ApiKeys.AddApiKeyResponse.CreatedAt">
            <summary>
            Date of creation of the api key
            </summary>
        </member>
        <member name="M:Algolia.Search.Models.ApiKeys.AddApiKeyResponse.Wait">
            <inheritdoc />
            <summary>
            Wait until the key exists on the server
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.ApiKeys.ApiKey">
            <summary>
            Algolia's API Key
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.ApiKeys.ApiKey.Key">
            <summary>
            Api Key
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.ApiKeys.ApiKey.Value">
            <summary>
            Key Value
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.ApiKeys.ApiKey.Acl">
            <summary>
            Set of permissions associated to the key.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.ApiKeys.ApiKey.Validity">
            <summary>
             A Unix timestamp used to define the expiration date of the API key.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.ApiKeys.ApiKey.MaxHitsPerQuery">
            <summary>
            Specify the maximum number of hits this API key can retrieve in one call.
            This parameter can be used to protect you from attempts at retrieving your entire index contents by massively querying the index.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.ApiKeys.ApiKey.MaxQueriesPerIPPerHour">
            <summary>
            Specify the maximum number of API calls allowed from an IP address per hour. Each time an API call is performed with this key, a check is performed.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.ApiKeys.ApiKey.Indexes">
            <summary>
            Specify the list of targeted indices. You can target all indices starting with a prefix or ending with a suffix using the ‘*’ character.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.ApiKeys.ApiKey.Referers">
            <summary>
            Specify the list of referers. You can target all referers starting with a prefix, ending with a suffix using the ‘*’ character.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.ApiKeys.ApiKey.RestrictSources">
            <summary>
            IPv4 network allowed to use the generated key. This is used for more protection against API key leaking and reuse.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.ApiKeys.ApiKey.QueryParameters">
            <summary>
            Specify the list of query parameters. You can force the query parameters for a query using the url string format.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.ApiKeys.ApiKey.Description">
            <summary>
            Specify a description of the API key. Used for informative purposes only. It has impact on the functionality of the API key.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.ApiKeys.ApiKey.CreatedAt">
            <summary>
            Date of creation
            </summary>
        </member>
        <member name="M:Algolia.Search.Models.ApiKeys.ApiKey.ToString">
            <summary>
            ToString()
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.ApiKeys.DeleteApiKeyResponse">
            <summary>
            Waitable delete api key response
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.ApiKeys.DeleteApiKeyResponse.Key">
            <summary>
            The key to delete
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.ApiKeys.DeleteApiKeyResponse.DeletedAt">
            <summary>
            Date of deletion
            </summary>
        </member>
        <member name="M:Algolia.Search.Models.ApiKeys.DeleteApiKeyResponse.Wait">
            <inheritdoc />
            <summary>
            Wait that the key doesn't exist anymore on the API side
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.ApiKeys.ListApiKeysResponse">
            <summary>
            https://www.algolia.com/doc/api-reference/api-methods/list-api-keys/
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.ApiKeys.ListApiKeysResponse.Keys">
            <summary>
            List of keys
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.ApiKeys.RestoreApiKeyResponse">
            <summary>
            API response when restoring an API Key
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.ApiKeys.RestoreApiKeyResponse.Key">
            <summary>
            The returned api key
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.ApiKeys.RestoreApiKeyResponse.CreatedAt">
            <summary>
            Restoration date of the API key
            </summary>
        </member>
        <member name="M:Algolia.Search.Models.ApiKeys.RestoreApiKeyResponse.Wait">
            <inheritdoc />
            <summary>
            Wait until the key is restored on the server
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.ApiKeys.SecuredApiKeyRestriction">
            <summary>
            Secured Api Key restrictions
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.ApiKeys.SecuredApiKeyRestriction.Query">
            <summary>
            Search query parameters
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.ApiKeys.SecuredApiKeyRestriction.ValidUntil">
            <summary>
            A Unix timestamp used to define the expiration date of the API key.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.ApiKeys.SecuredApiKeyRestriction.RestrictIndices">
            <summary>
            List of index names that can be queried.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.ApiKeys.SecuredApiKeyRestriction.RestrictSources">
            <summary>
            IPv4 network allowed to use the generated key. This is used for more protection against API key leaking and reuse.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.ApiKeys.SecuredApiKeyRestriction.UserToken">
            <summary>
            Specify a user identifier. This is often used with rate limits.
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.ApiKeys.UpdateApiKeyResponse">
            <summary>
            Api's reponse for update api key
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.ApiKeys.UpdateApiKeyResponse.Key">
            <summary>
            The updated key
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.ApiKeys.UpdateApiKeyResponse.UpdatedAt">
            <summary>
            Date of update
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.ApiKeys.UpdateApiKeyResponse.PendingKey">
            <summary>
            Field used in the wait the method to check that the key was updated
            </summary>
        </member>
        <member name="M:Algolia.Search.Models.ApiKeys.UpdateApiKeyResponse.Wait">
            <summary>
            Wait until the key is updated
            Can be used for debugging purposes
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Batch.BatchOperation`1">
            <summary>
            Represent an algolia batch object
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Batch.BatchOperation`1.Action">
            <summary>
            Type of batch see <see cref="T:Algolia.Search.Models.Enums.BatchActionType"/>
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Batch.BatchOperation`1.IndexName">
            <summary>
            The index name on which you want to perform the operation
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Batch.BatchOperation`1.Body">
            <summary>
            Body of the batch, objects you want to send
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Batch.BatchRequest`1">
            <summary>
            Batch request for algoli'as API
            </summary>
        </member>
        <member name="M:Algolia.Search.Models.Batch.BatchRequest`1.#ctor(System.Collections.Generic.IEnumerable{Algolia.Search.Models.Batch.BatchOperation{`0}})">
            <summary>
            Create a new batch request with operations
            </summary>
            <param name="operations"></param>
        </member>
        <member name="M:Algolia.Search.Models.Batch.BatchRequest`1.#ctor(System.String,System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Create a new batch request with action type and data
            </summary>
            <param name="actionType">Batch Action Type</param>
            <param name="data">Data to send</param>
        </member>
        <member name="P:Algolia.Search.Models.Batch.BatchRequest`1.Operations">
            <summary>
            List of operations of the batch request
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Common.AddObjectResponse">
            <summary>
            Api response for addObject method
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.AddObjectResponse.CreatedAt">
            <summary>
            Date of creation of the object
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.AddObjectResponse.ObjectID">
            <summary>
            ObjectID of the added object
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Common.BatchIndexingResponse">
            <summary>
            Batch Indexing response. Composed of multiple batch responses.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.BatchIndexingResponse.Responses">
            <summary>
            List of responses
            </summary>
        </member>
        <member name="M:Algolia.Search.Models.Common.BatchIndexingResponse.Wait">
            <summary>
            Wait for all request to finish on the API side
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Common.BatchResponse">
            <summary>
            Api's batch response
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.BatchResponse.ObjectIDs">
            <summary>
            List of objectIds
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Common.BrowseIndexQuery">
            <summary>
            https://www.algolia.com/doc/rest-api/search/#browse-index-post
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.BrowseIndexQuery.Cursor">
            <summary>
            A cursor to retrieve the next chunk of data.
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Common.BrowseIndexResponse`1">
            <summary>
            Browse response from the API
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.BrowseIndexResponse`1.Cursor">
            <summary>
            A cursor to retrieve the next chunk of data.
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Common.CopyIndexRequest">
            <summary>
            Copy index request
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.CopyIndexRequest.Operation">
            <summary>
            Operation <see cref="T:Algolia.Search.Models.Enums.MoveType"/>
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.CopyIndexRequest.Destination">
            <summary>
            Destination index name (not encoded)
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Common.CopyIndexResponse">
            <summary>
            Api's copy index reponse
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.CopyIndexResponse.Status">
            <summary>
            Status of the copy
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.CopyIndexResponse.PendingTask">
            <summary>
            Is the task pending
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Common.CopyToRequest">
            <summary>
            Copy index to request
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.CopyToRequest.Operation">
            <summary>
            Operation <see cref="T:Algolia.Search.Models.Enums.MoveType"/>
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.CopyToRequest.Scope">
            <summary>
            The “scope” parameter is an array of strings that refer to the following items <see cref="T:Algolia.Search.Models.Enums.CopyScope"/>
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.CopyToRequest.IndexNameDest">
            <summary>
            Destination index name
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Common.CopyToResponse">
            <summary>
            Api's copy to response
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.CopyToResponse.UpdatedAt">
            <summary>
            Date of update
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Common.DeleteResponse">
            <summary>
            Api's delete response
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.DeleteResponse.DeletedAt">
            <summary>
            Date of deletion
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Common.IAlgoliaWaitableResponse">
            <summary>
            All write operations in Algolia are asynchronous by design.
            https://www.algolia.com/doc/api-reference/api-methods/wait-task/
            </summary>
        </member>
        <member name="M:Algolia.Search.Models.Common.IAlgoliaWaitableResponse.Wait">
            <summary>
            Wait for a task to complete before executing the next line of code, to synchronize index updates.
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Common.IndexingResponse">
            <summary>
            Waitable algolia's api response
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.IndexingResponse.TaskID">
            <summary>
            Algolia's API taskID
            </summary>
        </member>
        <member name="M:Algolia.Search.Models.Common.IndexingResponse.Wait">
            <summary>
            Wait for a task to complete before executing the next line of code, to synchronize index updates.
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Common.ListIndicesResponse">
            <summary>
            https://www.algolia.com/doc/api-reference/api-methods/list-indices/
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.ListIndicesResponse.Items">
            <summary>
            List of index response
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Common.IndicesResponse">
            <summary>
            Index response
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.IndicesResponse.Name">
            <summary>
            Index name.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.IndicesResponse.CreatedAt">
            <summary>
            Index creation date.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.IndicesResponse.UpdatedAt">
            <summary>
            Date of last update.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.IndicesResponse.Entries">
            <summary>
            Number of records contained in the index
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.IndicesResponse.DataSize">
            <summary>
            Number of bytes of the index in minified format.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.IndicesResponse.FileSize">
            <summary>
            Number of bytes of the index binary file.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.IndicesResponse.LastBuildTimes">
            <summary>
            Last build time in seconds.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.IndicesResponse.NumberOfPendingTasks">
            <summary>
            Number of pending indexing operations.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.IndicesResponse.PendingTask">
            <summary>
            A boolean which says whether the index has pending tasks.
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Common.LogResponse">
            <summary>
            https://www.algolia.com/doc/api-reference/api-methods/get-logs/
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.LogResponse.Logs">
            <summary>
            List of logs
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Common.Log">
            <summary>
            https://www.algolia.com/doc/api-reference/api-methods/get-logs/
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.Log.TimeStamp">
            <summary>
            Timestamp in ISO-8601 format.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.Log.Method">
            <summary>
            Rest type of the method.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.Log.AnswerCode">
            <summary>
            Http response code.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.Log.QueryBody">
            <summary>
            Request body. It’s truncated after 1000 characters.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.Log.Answer">
            <summary>
            Answer body. It’s truncated after 1000 characters.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.Log.Url">
            <summary>
            Request URL.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.Log.Ip">
            <summary>
            Client ip of the call.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.Log.Sha1">
            <summary>
            SHA1 ID of entry.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.Log.QueryHeaders">
            <summary>
            Request Headers (API Key is obfuscated).
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.Log.NumberOfApiCalls">
            <summary>
            Number Of Api Calls
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.Log.ProcessingTimeMs">
            <summary>
            Processing time for the query. This does not include network time.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.Log.NumberOfQueryHits">
            <summary>
            Number of hits returned for the query.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.Log.Exhaustive">
            <summary>
            Exhaustive flags used during the query.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.Log.Index">
            <summary>
            Index name of the log
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Common.MoveIndexRequest">
            <summary>
            Move index request
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.MoveIndexRequest.Operation">
            <summary>
            Operation <see cref="T:Algolia.Search.Models.Enums.MoveType"/>
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.MoveIndexRequest.Destination">
            <summary>
            Index destination name
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Common.MoveIndexResponse">
            <summary>
            Api's move index response
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.MoveIndexResponse.UpdatedAt">
            <summary>
            Date of update
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Common.MultipleGetObjectsRequest">
            <summary>
            Used to create multiple get
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.MultipleGetObjectsRequest.Requests">
            <summary>
            List of requests
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Common.MultipleGetObject">
            <summary>
            Multiple request
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.MultipleGetObject.IndexName">
            <summary>
            Name of the index containing the object
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.MultipleGetObject.ObjectID">
            <summary>
            ID of the object within that index
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.MultipleGetObject.AttributesToRetrieve">
            <summary>
            List of attributes to retrieve. By default, all retrievable attributes are returned.
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Common.MultipleGetObjectsResponse`1">
            <summary>
            Multiple get objects
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.MultipleGetObjectsResponse`1.Results">
            <summary>
            List of results
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Common.MultipleIndexBatchIndexingResponse">
            <summary>
            Waitable api's response for multi batch
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.MultipleIndexBatchIndexingResponse.ObjectIDs">
            <summary>
            List of returned objectIDS
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.MultipleIndexBatchIndexingResponse.TaskID">
            <summary>
            A map of index/taskid
            </summary>
        </member>
        <member name="M:Algolia.Search.Models.Common.MultipleIndexBatchIndexingResponse.Wait">
            <summary>
            Wait for all asynchronous batch operations to finish
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Common.MultipleQueriesRequest">
            <summary>
            Class used to perfom multiple requests
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.MultipleQueriesRequest.Requests">
            <summary>
            List of requests
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.MultipleQueriesRequest.Strategy">
            <summary>
            Request strategy <see cref="T:Algolia.Search.Models.Enums.StrategyType"/>
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Common.MultipleQueries">
            <summary>
            Multiple queries
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.MultipleQueries.IndexName">
            <summary>
            The name of the index to perform the operation
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.MultipleQueries.Params">
            <summary>
            Search query parameters
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Common.MultiResponse">
            <summary>
            Any different call can be any write operation
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.MultiResponse.Responses">
            <summary>
            List of waitable responses
            </summary>
        </member>
        <member name="M:Algolia.Search.Models.Common.MultiResponse.Wait">
            <summary>
            Wait for different asynchronous operations to finish
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Common.Request">
            <summary>
            Request to send to the API
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.Request.Method">
            <summary>
            The HTTP verb GET,POST etc.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.Request.Uri">
            <summary>
            Uri of the request
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.Request.Headers">
            <summary>
            Headers a dictionary
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.Request.Body">
            <summary>
            Body of the request
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Common.TaskStatusResponse">
            <summary>
            Algolia's asynchronous task
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.TaskStatusResponse.Status">
            <summary>
            The status of the task
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.TaskStatusResponse.PendingTask">
            <summary>
            Is the task pending
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Common.UpdateObjectResponse">
            <summary>
            Api's update object response
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.UpdateObjectResponse.UpdatedAt">
            <summary>
            Date of update
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Common.UpdateObjectResponse.ObjectID">
            <summary>
            ObjectId updated
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Enums.AdvancedSyntaxFeatureType">
            <summary>
            AdvancedSyntaxFeatureType values
            </summary>
        </member>
        <member name="F:Algolia.Search.Models.Enums.AdvancedSyntaxFeatureType.ExactPhrase">
            <summary>
            Copy settings
            </summary>
        </member>
        <member name="F:Algolia.Search.Models.Enums.AdvancedSyntaxFeatureType.ExcludeWords">
            <summary>
            Copy synonyms
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Enums.BatchActionType">
            <summary>
            Actions that need to be performed
            https://www.algolia.com/doc/api-reference/api-methods/batch/
            </summary>
        </member>
        <member name="F:Algolia.Search.Models.Enums.BatchActionType.AddObject">
            <summary>
            https://www.algolia.com/doc/api-reference/api-methods/batch/?language=csharp#method-param-operation
            </summary>
        </member>
        <member name="F:Algolia.Search.Models.Enums.BatchActionType.UpdateObject">
            <summary>
            https://www.algolia.com/doc/api-reference/api-methods/batch/?language=csharp#method-param-operation
            </summary>
        </member>
        <member name="F:Algolia.Search.Models.Enums.BatchActionType.PartialUpdateObject">
            <summary>
            https://www.algolia.com/doc/api-reference/api-methods/batch/?language=csharp#method-param-operation
            </summary>
        </member>
        <member name="F:Algolia.Search.Models.Enums.BatchActionType.PartialUpdateObjectNoCreate">
            <summary>
            https://www.algolia.com/doc/api-reference/api-methods/batch/?language=csharp#method-param-operation
            </summary>
        </member>
        <member name="F:Algolia.Search.Models.Enums.BatchActionType.DeleteObject">
            <summary>
            https://www.algolia.com/doc/api-reference/api-methods/batch/?language=csharp#method-param-operation
            </summary>
        </member>
        <member name="F:Algolia.Search.Models.Enums.BatchActionType.Delete">
            <summary>
            https://www.algolia.com/doc/api-reference/api-methods/batch/?language=csharp#method-param-operation
            </summary>
        </member>
        <member name="F:Algolia.Search.Models.Enums.BatchActionType.Clear">
            <summary>
            https://www.algolia.com/doc/api-reference/api-methods/batch/?language=csharp#method-param-operation
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Enums.CallType">
            <summary>
            https://docs.microsoft.com/en-us/dotnet/csharp/programming-guide/enumeration-types
            Binary enums beware when adding new values
            </summary>
        </member>
        <member name="F:Algolia.Search.Models.Enums.CallType.Read">
            <summary>
            Read Call
            </summary>
        </member>
        <member name="F:Algolia.Search.Models.Enums.CallType.Write">
            <summary>
            Write Call
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Enums.CopyScope">
            <summary>
            https://www.algolia.com/doc/api-reference/api-methods/copy-index/#method-param-scope
            </summary>
        </member>
        <member name="F:Algolia.Search.Models.Enums.CopyScope.Settings">
            <summary>
            Copy settings
            </summary>
        </member>
        <member name="F:Algolia.Search.Models.Enums.CopyScope.Synonyms">
            <summary>
            Copy synonyms
            </summary>
        </member>
        <member name="F:Algolia.Search.Models.Enums.CopyScope.Rules">
            <summary>
            Copy rules
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Enums.EditType">
            <summary>
            https://www.algolia.com/doc/api-reference/api-methods/save-rule/#method-param-type
            </summary>
        </member>
        <member name="F:Algolia.Search.Models.Enums.EditType.Remove">
            <summary>
            when you want to delete some text and not replace it with anything
            </summary>
        </member>
        <member name="F:Algolia.Search.Models.Enums.EditType.Replace">
            <summary>
             when you want to delete some text and replace it with something else
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Enums.EventType">
            <summary>
            Insights event type
            </summary>
        </member>
        <member name="F:Algolia.Search.Models.Enums.EventType.Click">
            <summary>
            Click event
            </summary>
        </member>
        <member name="F:Algolia.Search.Models.Enums.EventType.Conversion">
            <summary>
             Conversion event
            </summary>
        </member>
        <member name="F:Algolia.Search.Models.Enums.EventType.View">
            <summary>
             View event
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Enums.LogType">
            <summary>
            Algoli'as Log type
            </summary>
        </member>
        <member name="F:Algolia.Search.Models.Enums.LogType.Build">
            <summary>
            All build logs
            </summary>
        </member>
        <member name="F:Algolia.Search.Models.Enums.LogType.Query">
            <summary>
            All query logs
            </summary>
        </member>
        <member name="F:Algolia.Search.Models.Enums.LogType.Error">
            <summary>
            All error logs
            </summary>
        </member>
        <member name="F:Algolia.Search.Models.Enums.LogType.All">
            <summary>
            All logs
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Enums.MoveType">
            <summary>
            Move operation
            </summary>
        </member>
        <member name="F:Algolia.Search.Models.Enums.MoveType.Move">
            <summary>
            Move the index
            </summary>
        </member>
        <member name="F:Algolia.Search.Models.Enums.MoveType.Copy">
            <summary>
            Copy the index
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Enums.RetryOutcomeType">
            <summary>
            Retry strategy outcome values
            </summary>
        </member>
        <member name="F:Algolia.Search.Models.Enums.RetryOutcomeType.Success">
            <summary>
            Success
            </summary>
        </member>
        <member name="F:Algolia.Search.Models.Enums.RetryOutcomeType.Retry">
            <summary>
            Retry the call
            </summary>
        </member>
        <member name="F:Algolia.Search.Models.Enums.RetryOutcomeType.Failure">
            <summary>
            Call failed error
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Enums.StrategyType">
            <summary>
            Query strategy type
            </summary>
        </member>
        <member name="F:Algolia.Search.Models.Enums.StrategyType.None">
            <summary>
            No strategy
            </summary>
        </member>
        <member name="F:Algolia.Search.Models.Enums.StrategyType.StopIfEnoughMatches">
            <summary>
            Stop if enough matches
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Enums.SynonymType">
            <summary>
            https://www.algolia.com/doc/guides/textual-relevance/synonyms/#synonyms-overview
            </summary>
        </member>
        <member name="F:Algolia.Search.Models.Enums.SynonymType.Synonym">
            <summary>
            Synonuym
            </summary>
        </member>
        <member name="F:Algolia.Search.Models.Enums.SynonymType.OneWaySynonym">
            <summary>
            One way synonm
            </summary>
        </member>
        <member name="F:Algolia.Search.Models.Enums.SynonymType.AltCorrection1">
            <summary>
            Alt correction
            </summary>
        </member>
        <member name="F:Algolia.Search.Models.Enums.SynonymType.AltCorrection2">
            <summary>
            Alt correction
            </summary>
        </member>
        <member name="F:Algolia.Search.Models.Enums.SynonymType.Placeholder">
            <summary>
            Placeholder
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Insights.InsightsRequest">
            <summary>
            Insights request
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Insights.InsightsRequest.Events">
            <summary>
            Events to send
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Insights.InsightsEvent">
            <summary>
            Insights event
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Insights.InsightsEvent.EventType">
            <summary>
            Event type
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Insights.InsightsEvent.EventName">
            <summary>
            User defined string, format: any ascii char except control points with length between 1 and 64.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Insights.InsightsEvent.Index">
            <summary>
            Index name, format, same as the engine.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Insights.InsightsEvent.UserToken">
            <summary>
            A user identifier, format [a-zA-Z0-9_-]{1,64}.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Insights.InsightsEvent.Timestamp">
            <summary>
            Event timestamp
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Insights.InsightsEvent.QueryID">
            <summary>
            Algolia queryID, format: [a-z1-9]{32}.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Insights.InsightsEvent.ObjectIDs">
            <summary>
            List of index objectIDs. Limited to 20 objects.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Insights.InsightsEvent.Filters">
            <summary>
             A filter is defined by the ${attr}${op}${value} string e.g. brand:apple. Limited to 10 filters.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Insights.InsightsEvent.Positions">
            <summary>
            Position of the click in the list of Algolia search results.
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Insights.InsightsResponse">
            <summary>
            Insights response
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Insights.InsightsResponse.Status">
            <summary>
            Response status code
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Insights.InsightsResponse.Message">
            <summary>
            Response message from the API
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Mcm.AssignUserIdRequest">
            <summary>
            Assign user request
            https://www.algolia.com/doc/api-reference/api-methods/assign-user-id/
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Mcm.AssignUserIdRequest.Cluster">
            <summary>
            Cluster name.
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Mcm.AssignUserIdResponse">
            <summary>
            Waitable response of assignUserid method
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Mcm.AssignUserIdResponse.UserId">
            <summary>
            The user Id
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Mcm.AssignUserIdResponse.CreatedAt">
            <summary>
            Date of creation of the userId
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Mcm.ListClustersResponse">
            <summary>
            List of cluster response
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Mcm.ListClustersResponse.Clusters">
            <summary>
            List of clusters
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Mcm.ClustersResponse">
            <summary>
            Cluster response
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Mcm.ClustersResponse.ClusterName">
            <summary>
            The cluster name
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Mcm.ClustersResponse.NbRecords">
            <summary>
            Number of records in the cluster.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Mcm.ClustersResponse.NbUserIDs">
            <summary>
            Number of users assign to the cluster.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Mcm.ClustersResponse.DataSize">
            <summary>
            Data size taken by all the users assigned to the cluster.
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Mcm.RemoveUserIdResponse">
            <summary>
            Waitable response for removeUserId
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Mcm.RemoveUserIdResponse.UserId">
            <summary>
            UserId to remove
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Mcm.RemoveUserIdResponse.DeletedAt">
            <summary>
            Date of deletion
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Mcm.SearchUserIdsRequest">
            <summary>
            Search user Ids Request
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Mcm.SearchUserIdsRequest.Query">
            <summary>
            Query to search. The search is a prefix search with typoTolerance. Use empty query to retrieve all users.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Mcm.SearchUserIdsRequest.Cluster">
            <summary>
            If specified only clusters assigned to this cluster can be returned.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Mcm.SearchUserIdsRequest.Page">
            <summary>
            Page to fetch.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Mcm.SearchUserIdsRequest.HitsPerPage">
            <summary>
            Number of users to return by page.
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Mcm.TopUserIdResponse">
            <summary>
            Algolia's top user id response
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Mcm.TopUserIdResponse.TopUsers">
            <summary>
            Mapping of cluster names to top users.
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Mcm.ListUserIdsResponse">
            <summary>
            https://www.algolia.com/doc/api-reference/api-methods/list-user-id/
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Mcm.ListUserIdsResponse.UserIds">
            <summary>
            List of users id
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Mcm.UserIdResponse">
            <summary>
            https://www.algolia.com/doc/api-reference/api-methods/list-user-id/
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Mcm.UserIdResponse.UserID">
            <summary>
            userID of the user.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Mcm.UserIdResponse.ClusterName">
            <summary>
            Cluster on which the user is assigned
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Mcm.UserIdResponse.NbRecords">
            <summary>
            Number of records belonging to the user.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Mcm.UserIdResponse.DataSize">
            <summary>
            Data size used by the user.
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Personalization.EventScoring">
             <summary>
            
             </summary>
        </member>
        <member name="P:Algolia.Search.Models.Personalization.EventScoring.Type">
             <summary>
            
             </summary>
        </member>
        <member name="P:Algolia.Search.Models.Personalization.EventScoring.Score">
             <summary>
            
             </summary>
        </member>
        <member name="T:Algolia.Search.Models.Personalization.FacetScoring">
             <summary>
            
             </summary>
        </member>
        <member name="P:Algolia.Search.Models.Personalization.FacetScoring.Score">
             <summary>
            
             </summary>
        </member>
        <member name="T:Algolia.Search.Models.Personalization.GetStrategyResponse">
            <summary>
            Get personalization strategy response
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Personalization.GetStrategyResponse.EventsScoring">
            <summary>
            Event scoring
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Personalization.GetStrategyResponse.FacetsScoring">
            <summary>
            Facet scoring
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Personalization.GetStrategyResponse.TaskId">
            <summary>
            Task id
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Personalization.SetStrategyRequest">
            <summary>
            Set personalization strategy request
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Personalization.SetStrategyRequest.EventsScoring">
            <summary>
            Event scoring
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Personalization.SetStrategyRequest.FacetsScoring">
            <summary>
            Facet scoring
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Personalization.SetStrategyResponse">
            <summary>
            Set strategy response
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Personalization.SetStrategyResponse.UpdatedAt">
            <summary>
            Date of update (UTC)
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Rules.AutomaticFacetFilter">
            <summary>
            Automatic facet filters of a rule
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Rules.AutomaticFacetFilter.Facet">
            <summary>
            Attribute to filter on. This must match a facet placeholder in the rule’s pattern.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Rules.AutomaticFacetFilter.Disjunctive">
            <summary>
            Whether the filter is disjunctive (true) or conjunctive (false).
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Rules.AutomaticFacetFilter.Score">
            <summary>
            Score for the filter. Typically used for optional or disjunctive filters.
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Rules.Condition">
            <summary>
            Condition of a rule
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Rules.Condition.Pattern">
            <summary>
            Query patterns are expressed as a string with a specific syntax. A pattern is a sequence of tokens.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Rules.Condition.Anchoring">
            <summary>
            { is | startsWith | endsWith | contains }: Whether the pattern must match the beginning or the end of the query string, or both, or none.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Rules.Condition.Context">
            <summary>
            Rule context (format: [A-Za-z0-9_-]+). When specified, the rule is contextual and applies only when the same context is specified at query time (using the ruleContexts parameter).
            When absent, the rule is generic and always applies (provided that its other conditions are met, of course).
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Rules.Consequence">
            <summary>
            Consequence of the rule.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Rules.Consequence.Params">
            <summary>
            Additional search parameters. Any valid search parameter is allowed.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Rules.Consequence.Promote">
            <summary>
            Objects to promote as hits.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Rules.Consequence.Hide">
            <summary>
            Objects to hide from hits.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Rules.Consequence.UserData">
            <summary>
            Custom JSON object that will be appended to the userData array in the response. 
            This object is not interpreted by the API. It is limited to 1kB of minified JSON.
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Rules.ConsequenceParams">
            <summary>
            Consequence params
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Rules.ConsequenceParams.Query">
            <summary>
            When providing a string, it replaces the entire query string.
            When providing an object, it describes incremental edits to be made to the query string (but you can’t do both).
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Rules.ConsequenceParams.AutomaticFacetFilters">
            <summary>
            Names of facets to which automatic filtering must be applied; they must match the facet name of a facet value placeholder in the query pattern.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Rules.ConsequenceParams.AutomaticOptionalFacetFilters">
            <summary>
            Same syntax as automaticFacetFilters, but the engine treats the filters as optional.
            Behaves like optionalFilters.
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Rules.ConsequencePromote">
            <summary>
            Consequence promote
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Rules.ConsequencePromote.ObjectID">
            <summary>
            Unique identifier of the object to promote.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Rules.ConsequencePromote.Position">
            <summary>
            Promoted rank for the object (zero-based).
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Rules.ConsequenceQuery">
            <summary>
            Consequence query
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Rules.ConsequenceQuery.Edits">
            <summary>
            List of edits
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Rules.Edit">
            <summary>
            Objects to edti
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Rules.Edit.Type">
            <summary>
            Type of edit <see cref="T:Algolia.Search.Models.Enums.EditType"/>
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Rules.Edit.Delete">
            <summary>
            Text or patterns to remove from the query string.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Rules.Edit.Insert">
            <summary>
            Text that should be inserted in place of the removed text inside the query string.
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Rules.Hide">
            <summary>
            Objects to hide from hits. Each object must contain an objectID field
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Rules.Hide.ObjectID">
            <summary>
            ObjectID to hide
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Rules.Rule">
            <summary>
            https://www.algolia.com/doc/tutorials/query-rules/coding-query-rules-parameters/#coding-query-rule-parameters
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Rules.Rule.ObjectID">
            <summary>
            Unique identifier for the rule (format: [A-Za-z0-9_-]+).
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Rules.Rule.Condition">
            <summary>
            Condition of the rule, expressed using the following variables: pattern, anchoring, context.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Rules.Rule.Consequence">
            <summary>
            Consequence of the rule. At least one of the following object must be used: params, promote, hide, userData
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Rules.Rule.Description">
            <summary>
            This field is intended for rule management purposes, in particular to ease searching for rules and presenting them to human readers. It is not interpreted by the API.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Rules.Rule.Enabled">
            <summary>
            Whether the rule is enabled. Disabled rules remain in the index, but are not applied at query time.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Rules.Rule.Validity">
            <summary>
            By default, rules are permanently valid. When validity periods are specified, the rule applies only during those periods; it is ignored the rest of the time.
            The list must not be empty.
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Rules.RuleQuery">
            <summary>
            Rule query matching various criteria.
            </summary>
        </member>
        <member name="M:Algolia.Search.Models.Rules.RuleQuery.#ctor(System.String)">
            <summary>
            Default constructor
            </summary>
            <param name="query">Full text query.</param>
        </member>
        <member name="P:Algolia.Search.Models.Rules.RuleQuery.Query">
            <summary>
            Full text query.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Rules.RuleQuery.Anchoring">
            <summary>
            When specified, restricts matches to rules with a specific anchoring type. When omitted, all anchoring types may match.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Rules.RuleQuery.Context">
            <summary>
            Restricts matches to contextual rules with a specific context (exact match).
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Rules.RuleQuery.Page">
            <summary>
            Requested page (zero-based).
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Rules.RuleQuery.HitsPerPage">
            <summary>
            Maximum number of hits in a page. Minimum is 1, maximum is 1000.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Rules.RuleQuery.Enabled">
            <summary>
            When specified, restricts matches to rules with a specific enabled status.
            When absent (default), all rules are retrieved, regardless of their enabled status.
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Rules.SaveRuleResponse">
            <summary>
            Api's response for save rule
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Rules.SaveRuleResponse.UpdatedAt">
            <summary>
            Date of update
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Rules.TimeRange">
            <summary>
            Time range object From/Until
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Rules.TimeRange.From">
            <summary>
            DateTime with UTC offset for Serialization/Deserialization in unix timespam
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Rules.TimeRange.Until">
            <summary>
            DateTime with UTC offset for Serialization/Deserialization in unix timespam
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Search.FacetStats">
            <summary>
            Statistics for numerical facets.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.FacetStats.Min">
            <summary>
            The minimum value in the result set.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.FacetStats.Max">
            <summary>
            The maximum value in the result set.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.FacetStats.Avg">
            <summary>
            The average facet value in the result set.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.FacetStats.Sum">
            <summary>
            The sum of all values in the result set.
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Search.MultipleQueriesResponse`1">
            <summary>
            Api's response for multiple queries
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.MultipleQueriesResponse`1.Results">
            <summary>
            List of results
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Search.Query">
            <summary>
            For more information regarding the parameters
            https://www.algolia.com/doc/api-reference/search-api-parameters/
            </summary>
        </member>
        <member name="M:Algolia.Search.Models.Search.Query.#ctor(System.String)">
            <summary>
            Create a new query with an empty search query
            </summary>
            <param name="searchQuery"></param>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.SearchQuery">
            <summary>
            The text to search in the index.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.FacetFilters">
            <summary>
            Filter hits by facet value.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.OptionalFilters">
            <summary>
            Create filters for ranking purposes, where records that match the filter are ranked highest.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.NumericFilters">
            <summary>
            Filter on numeric attributes.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.TagFilters">
            <summary>
            Filter hits by tags.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.SumOrFiltersScores">
            <summary>
            Determines how to calculate the total score for filtering.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.Filters">
            <summary>
            Filter the query with numeric, facet and/or tag filters.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.Page">
            <summary>
            Specify the page to retrieve.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.HitsPerPage">
            <summary>
            Set the number of hits per page.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.Offset">
            <summary>
            Specify the offset of the first hit to return.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.Length">
            <summary>
             Set the number of hits to retrieve (used only with offset).
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.AttributesToHighlight">
            <summary>
            List of attributes to highlight.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.AttributesToSnippet">
            <summary>
            List of attributes to snippet, with an optional maximum number of words to snippet.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.AttributesToRetrieve">
            <summary>
            Gives control over which attributes to retrieve and which not to retrieve.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.HighlightPreTag">
            <summary>
            The HTML string to insert before the highlighted parts in all highlight and snippet results.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.HighlightPostTag">
            <summary>
            The HTML string to insert after the highlighted parts in all highlight and snippet results
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.SnippetEllipsisText">
            <summary>
            String used as an ellipsis indicator when a snippet is truncated.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.RestrictHighlightAndSnippetArrays">
            <summary>
            Restrict highlighting and snippeting to items that matched the query.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.Facets">
            <summary>
            Facets to retrieve.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.MaxValuesPerFacet">
            <summary>
            Maximum number of facet values to return for each facet during a regular search.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.FacetingAfterDistinct">
            <summary>
            Force faceting to be applied after de-duplication (via the Distinct setting).
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.MinWordSizefor1Typo">
            <summary>
            Minimum number of characters a word in the query string must contain to accept matches with 1 typo
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.MinWordSizefor2Typos">
            <summary>
            Minimum number of characters a word in the query string must contain to accept matches with 2 typos.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.AllowTyposOnNumericTokens">
            <summary>
            Whether to allow typos on numbers (“numeric tokens”) in the query string.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.DisableTypoToleranceOnAttributes">
            <summary>
            List of attributes on which you want to disable typo tolerance.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.QueryType">
            <summary>
            Controls if and how query words are interpreted as prefixes.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.RemoveWordsIfNoResults">
            <summary>
            Selects a strategy to remove words from the query when it doesn’t match any hits.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.AdvancedSyntax">
            <summary>
            Enables the advanced query syntax.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.OptionalWords">
            <summary>
            A list of words that should be considered as optional when found in the query.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.DisableExactOnAttributes">
            <summary>
            List of attributes on which you want to disable the exact ranking criterion.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.ExactOnSingleWordQuery">
            <summary>
            Controls how the exact ranking criterion is computed when the query contains only one word.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.AlternativesAsExact">
            <summary>
            List of alternatives that should be considered an exact match by the exact ranking criterion.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.EnableRules">
            <summary>
            Whether rules should be globally enabled.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.RuleContexts">
            <summary>
            Enables contextual rules.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.Distinct">
            <summary>
            Enables de-duplication or grouping of results.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.Analytics">
            <summary>
            Whether the current query will be taken into account in the Analytics
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.AnalyticsTags">
            <summary>
            List of tags to apply to the query in the analytics.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.Synonyms">
            <summary>
            Whether to take into account an index’s synonyms for a particular search.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.ReplaceSynonymsInHighlight">
            <summary>
            Whether to highlight and snippet the original word that matches the synonym or the synonym itself.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.MinProximity">
            <summary>
            Precision of the proximity ranking criterion.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.ResponseFields">
            <summary>
            Choose which fields the response will contain. Applies to search and browse queries.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.MaxFacetHits">
            <summary>
            Maximum number of facet hits to return during a search for facet values.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.PercentileComputation">
            <summary>
            Whether to include or exclude a query from the processing-time percentile computation.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.ClickAnalytics">
            <summary>
            Enable the Click Analytics feature.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.EnablePersonalization">
            <summary>
            Enable personalization for the query
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.RestrictSearchableAttributes">
            <summary>
            Restricts a given query to look in only a subset of your searchable attributes.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.SortFacetValuesBy">
            <summary>
            Override default sort order for facet values at query time
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.TypoTolerance">
            <summary>
            Controls whether typo tolerance is enabled and how it is applied.
            Could be string or bool
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.AroundLatLng">
            <summary>
            Search for entries around a central geolocation, enabling a geo search within a circular area.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.AroundLatLngViaIP">
            <summary>
            Search for entries around a given location automatically computed from the requester’s IP address.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.AroundRadius">
            <summary>
            Define the maximum radius for a geo search (in meters).
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.AroundPrecision">
            <summary>
            Precision of geo search (in meters), to add grouping by geo location to the ranking formula.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.MinimumAroundRadius">
            <summary>
            Minimum radius (in meters) used for a geo search when aroundRadius is not set.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.InsideBoundingBox">
            <summary>
            Search inside a rectangular area (in geo coordinates).
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.InsidePolygon">
            <summary>
            Search inside a polygon (in geo coordinates).
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.IgnorePlurals">
            <summary>
            Treats singular, plurals, and other forms of declensions as matching terms.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.RemoveStopWords">
            <summary>
            Removes stop (common) words from the query before executing it.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.Query.GetRankingInfo">
            <summary>
            When true, each hit in the response contains an additional _rankingInfo object
            </summary>
        </member>
        <member name="M:Algolia.Search.Models.Search.Query.ToQueryString">
            <summary>
            Returns the Query as a query string 
            Example : "query= distinct=0"
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Search.SearchForFacetRequest">
            <summary>
            Search for facets
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.SearchForFacetRequest.FacetName">
            <summary>
            Attribute name.
            Note that for this to work, attribute must be declared in the attributesForFaceting index setting with the searchable() modifier.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.SearchForFacetRequest.FacetQuery">
            <summary>
            The search query used to search the facet attribute.
            Follows the same rules for an index query: a single character, a partial word, a word, or a phrase
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.SearchForFacetRequest.SearchParameters">
            <summary>
            Search parameters to be used to search the underlying index
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Search.SearchForFacetResponse">
            <summary>
            https://www.algolia.com/doc/api-reference/api-methods/search-for-facet-values/
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.SearchForFacetResponse.FacetHits">
            <summary>
            List of facet hit
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.SearchForFacetResponse.ExhaustiveFacetsCount">
            <summary>
            Whether the count returned for each facetHit is exhaustive.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.SearchForFacetResponse.ProcessingTimeMS">
            <summary>
            Processing time.
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Search.FacetHit">
            <summary>
            https://www.algolia.com/doc/api-reference/api-methods/search-for-facet-values/
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.FacetHit.Value">
            <summary>
            Facet value.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.FacetHit.Highlighted">
            <summary>
            Highlighted value.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.FacetHit.Count">
            <summary>
            Number of times the value is present in the dataset.
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Search.SearchResponse`1">
            <summary>
            Search response
            https://www.algolia.com/doc/api-reference/api-methods/search/
            </summary>
            <typeparam name="T">Type of the data to send/retrieve</typeparam>
        </member>
        <member name="P:Algolia.Search.Models.Search.SearchResponse`1.Hits">
            <summary>
            The hits returned by the search.
            Hits are ordered according to the ranking or sorting of the index being queried.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.SearchResponse`1.Page">
            <summary>
            Index of the current page (zero-based).
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.SearchResponse`1.Length">
            <summary>
             Number of hits returned (used only with offset).
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.SearchResponse`1.Offset">
            <summary>
            The offset of the first hit to returned.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.SearchResponse`1.NbHits">
            <summary>
            Number of hits matched by the query.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.SearchResponse`1.NbPages">
            <summary>
            Number of pages returned.
            Calculation is based on the total number of hits (nbHits) divided by the number of hits per page (hitsPerPage), rounded up to the nearest integer.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.SearchResponse`1.HitsPerPage">
            <summary>
            Maximum number of hits returned per page.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.SearchResponse`1.ProcessingTimeMs">
            <summary>
            Time the server took to process the request, in milliseconds. This does not include network time.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.SearchResponse`1.ExhaustiveNbHits">
            <summary>
            Whether the nbHits is exhaustive (true) or approximate (false).
            An approximation is done when the query takes more than 50ms to be processed (this can happen when using complex filters on millions on records).
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.SearchResponse`1.ExhaustiveFacetsCount">
            <summary>
            An echo of the query text.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.SearchResponse`1.Facets">
            <summary>
            A mapping of each facet name to the corresponding facet counts.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.SearchResponse`1.FacetsStats">
            <summary>
            Statistics for numerical facets.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.SearchResponse`1.Query">
            <summary>
            An echo of the query text.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.SearchResponse`1.QueryAfterRemoval">
            <summary>
            A markup text indicating which parts of the original query have been removed in order to retrieve a non-empty result set.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.SearchResponse`1.Params">
            <summary>
            A url-encoded string of all search parameters.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.SearchResponse`1.QueryID">
            <summary>
             QueryID
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.SearchResponse`1.Message">
            <summary>
            Used to return warnings about the query.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.SearchResponse`1.AroundLatLng">
            <summary>
            The computed geo location. Warning: for legacy reasons, this parameter is a string and not an object.
            Format: ${lat},${lng}, where the latitude and longitude are expressed as decimal floating point number
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.SearchResponse`1.AutomaticRadius">
            <summary>
            The automatically computed radius. For legacy reasons, this parameter is a string and not an integer..
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.SearchResponse`1.ServerUsed">
            <summary>
            Actual host name of the server that processed the request.
            Our DNS supports automatic failover and load balancing, so this may differ from the host name used in the request.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.SearchResponse`1.Index">
            <summary>
             Index name used for the query.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.SearchResponse`1.IndexUsed">
            <summary>
             Index name used for the query. In case of AB test, the index targetted isn’t always the index used by the query.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.SearchResponse`1.AbTestVariantID">
            <summary>
             In case of AB test, reports the variant ID used. The variant ID is the position in the array of variants (starting at 1).
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.SearchResponse`1.ParsedQuery">
            <summary>
             The query string that will be searched, after normalization.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.SearchResponse`1.UserData">
            <summary>
            Custom user data
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Search.SearchResponse`1.AppliedRules">
            <summary>
            Rules applied to the query
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Settings.IndexSettings">
            <summary>
            For more informations regarding Index settings
            https://www.algolia.com/doc/api-reference/settings-api-parameters/
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Settings.IndexSettings.SearchableAttributes">
            <summary>
            The complete list of attributes that will be used for searching.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Settings.IndexSettings.AttributesForFaceting">
            <summary>
            The complete list of attributes that will be used for faceting
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Settings.IndexSettings.UnretrievableAttributes">
            <summary>
            List of attributes that cannot be retrieved at query time.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Settings.IndexSettings.AttributesToRetrieve">
            <summary>
            Gives control over which attributes to retrieve and which not to retrieve.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Settings.IndexSettings.Ranking">
            <summary>
            Controls the way results are sorted.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Settings.IndexSettings.CustomRanking">
            <summary>
            Specifies the custom ranking criterion.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Settings.IndexSettings.Replicas">
            <summary>
            Creates replicas, exact copies of an index.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Settings.IndexSettings.MaxValuesPerFacet">
            <summary>
            Maximum number of facet values to return for each facet during a regular search.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Settings.IndexSettings.SortFacetValuesBy">
            <summary>
            Controls how facet values are sorted.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Settings.IndexSettings.AttributesToHighlight">
            <summary>
            List of attributes to highlight.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Settings.IndexSettings.AttributesToSnippet">
            <summary>
            List of attributes to snippet, with an optional maximum number of words to snippet
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Settings.IndexSettings.HighlightPreTag">
            <summary>
            The HTML string to insert before the highlighted parts in all highlight and snippet results.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Settings.IndexSettings.HighlightPostTag">
            <summary>
            The HTML string to insert after the highlighted parts in all highlight and snippet results.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Settings.IndexSettings.SnippetEllipsisText">
            <summary>
            String used as an ellipsis indicator when a snippet is truncated.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Settings.IndexSettings.RestrictHighlightAndSnippetArrays">
            <summary>
            Restrict highlighting and snippeting to items that matched the query.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Settings.IndexSettings.HitsPerPage">
            <summary>
            Set the number of hits per page
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Settings.IndexSettings.PaginationLimitedTo">
            <summary>
            Set the maximum number of hits accessible via pagination.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Settings.IndexSettings.MinWordSizefor1Typo">
            <summary>
            Minimum number of characters a word in the query string must contain to accept matches with 1 typo.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Settings.IndexSettings.MinWordSizefor2Typos">
            <summary>
            Minimum number of characters a word in the query string must contain to accept matches with 2 typos.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Settings.IndexSettings.TypoTolerance">
            <summary>
            Controls whether typo tolerance is enabled and how it is applied.
            Could be string or bool
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Settings.IndexSettings.AllowTyposOnNumericTokens">
            <summary>
            Whether to allow typos on numbers (“numeric tokens”) in the query string.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Settings.IndexSettings.DisableTypoToleranceOnAttributes">
            <summary>
            List of attributes on which you want to disable typo tolerance.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Settings.IndexSettings.DisableTypoToleranceOnWords">
            <summary>
            List of words on which you want to disable typo tolerance.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Settings.IndexSettings.SeparatorsToIndex">
            <summary>
            Control which separators are indexed.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Settings.IndexSettings.IgnorePlurals">
            <summary>
            Treats singular, plurals, and other forms of declensions as matching terms.
            Could be string[] or bool
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Settings.IndexSettings.QueryLanguages">
            <summary>
            Sets the languages to be used by language-specific settings and functionalities such as ignorePlurals, removeStopWords, and CJK word-detection.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Settings.IndexSettings.EnableRules">
            <summary>
            Whether rules should be globally enabled.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Settings.IndexSettings.QueryType">
            <summary>
            Controls if and how query words are interpreted as prefixes.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Settings.IndexSettings.RemoveWordsIfNoResults">
            <summary>
            Selects a strategy to remove words from the query when it doesn’t match any hits.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Settings.IndexSettings.AdvancedSyntax">
            <summary>
            Enables the advanced query syntax.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Settings.IndexSettings.AdvancedSyntaxFeatures">
            <summary>
            AdvancedSyntaxFeatures can be exactPhrase or excludeWords
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Settings.IndexSettings.OptionalWords">
            <summary>
            A list of words that should be considered as optional when found in the query.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Settings.IndexSettings.DisablePrefixOnAttributes">
            <summary>
            List of attributes on which you want to disable prefix matching.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Settings.IndexSettings.DisableExactOnAttributes">
            <summary>
            List of attributes on which you want to disable the exact ranking criterion.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Settings.IndexSettings.ExactOnSingleWordQuery">
            <summary>
            Controls how the exact ranking criterion is computed when the query contains only one word.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Settings.IndexSettings.AlternativesAsExact">
            <summary>
            List of alternatives that should be considered an exact match by the exact ranking criterion.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Settings.IndexSettings.RemoveStopWords">
            <summary>
            Removes stop (common) words from the query before executing it.
            Could be string[] or bool
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Settings.IndexSettings.NumericAttributesForFiltering">
            <summary>
            List of numeric attributes that can be used as numerical filters.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Settings.IndexSettings.AllowCompressionOfIntegerArray">
            <summary>
            Enables compression of large integer arrays.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Settings.IndexSettings.AttributeForDistinct">
            <summary>
            Name of the de-duplication attribute to be used with the distinct feature.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Settings.IndexSettings.Distinct">
            <summary>
            Enables de-duplication or grouping of results.
            Could be int or bool
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Settings.IndexSettings.ReplaceSynonymsInHighlight">
            <summary>
            Whether to highlight and snippet the original word that matches the synonym or the synonym itself.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Settings.IndexSettings.MinProximity">
            <summary>
            Precision of the proximity ranking criterion.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Settings.IndexSettings.ResponseFields">
            <summary>
            Choose which fields the response will contain. Applies to search and browse queries.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Settings.IndexSettings.MaxFacetHits">
            <summary>
            Maximum number of facet hits to return during a search for facet values.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Settings.IndexSettings.CamelCaseAttributes">
            <summary>
            List of attributes on which to do a decomposition of camel case words.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Settings.IndexSettings.DecompoundedAttributes">
            <summary>
            Specify on which attributes in your index Algolia should apply word-splitting (“decompounding”)
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Settings.IndexSettings.KeepDiacriticsOnCharacters">
            <summary>
            Characters that should not be automatically normalized by the search engine.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Settings.IndexSettings.Version">
            <summary>
            Version
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Settings.SetSettingsResponse">
            <summary>
            Api set settings response
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Settings.SetSettingsResponse.UpdatedAt">
            <summary>
            Date of update
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Synonyms.ClearSynonymsResponse">
            <summary>
            Api's clear synonyms response
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Synonyms.ClearSynonymsResponse.UpdatedAt">
            <summary>
            Date of update
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Synonyms.SaveSynonymResponse">
            <summary>
            Api's save synonym response
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Synonyms.SaveSynonymResponse.UpdatedAt">
            <summary>
            Date of update
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Synonyms.SaveSynonymResponse.Id">
            <summary>
            Synonym ID
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Synonyms.Synonym">
            <summary>
            https://www.algolia.com/doc/api-reference/api-methods/save-synonym/
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Synonyms.Synonym.ObjectID">
            <summary>
            Synonym object ID
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Synonyms.Synonym.Type">
            <summary>
            There are 4 synonym types. The parameter can be one of the following values <see cref="T:Algolia.Search.Models.Enums.SynonymType"/>
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Synonyms.Synonym.Synonyms">
            <summary>
            A list of synonyms
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Synonyms.Synonym.Input">
            <summary>
            Defines the synonym. A word or expression, used as the basis for the array of synonyms.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Synonyms.Synonym.Word">
            <summary>
            A single word, used as the basis for the below array of corrections.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Synonyms.Synonym.Corrections">
            <summary>
            A list of corrections of the word.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Synonyms.Synonym.Placeholder">
            <summary>
            A single word, used as the basis for the below list of replacements.
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Synonyms.Synonym.Replacements">
            <summary>
            An list of replacements of the placeholder.
            </summary>
        </member>
        <member name="T:Algolia.Search.Models.Synonyms.SynonymQuery">
            <summary>
            Query to search synonyms on an index
            </summary>
        </member>
        <member name="M:Algolia.Search.Models.Synonyms.SynonymQuery.#ctor(System.String)">
            <summary>
            Constructor with query string
            </summary>
            <param name="query">the text to search</param>
        </member>
        <member name="P:Algolia.Search.Models.Synonyms.SynonymQuery.Query">
            <summary>
            The text to search
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Synonyms.SynonymQuery.Type">
            <summary>
            There are 4 synonym types. The parameter can be one of the following values <see cref="T:Algolia.Search.Models.Enums.SynonymType"/>
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Synonyms.SynonymQuery.Page">
            <summary>
            Page to retrieve
            </summary>
        </member>
        <member name="P:Algolia.Search.Models.Synonyms.SynonymQuery.HitsPerPage">
            <summary>
            Number of hits per page
            </summary>
        </member>
        <member name="T:Algolia.Search.Serializer.AutomaticFacetFiltersConverter">
            <summary>
            Custom converter for legacy AutomaticFacetFilters
            </summary>
        </member>
        <member name="M:Algolia.Search.Serializer.AutomaticFacetFiltersConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Collections.Generic.IEnumerable{Algolia.Search.Models.Rules.AutomaticFacetFilter},Newtonsoft.Json.JsonSerializer)">
            <summary>
            No need to implement this method as we don't want to override default writer
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="serializer"></param>
        </member>
        <member name="M:Algolia.Search.Serializer.AutomaticFacetFiltersConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Collections.Generic.IEnumerable{Algolia.Search.Models.Rules.AutomaticFacetFilter},System.Boolean,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Algolia's specific converter to handle this specific object that could be a List of string or AutomaticFacetFilter
            </summary>
            <param name="reader"></param>
            <param name="objectType"></param>
            <param name="existingValue"></param>
            <param name="hasExistingValue"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="P:Algolia.Search.Serializer.AutomaticFacetFiltersConverter.CanWrite">
            <summary>
            Disable write json
            </summary>
        </member>
        <member name="T:Algolia.Search.Serializer.DateTimeEpochConverter">
            <summary>
            Allow Json.NET to serialize/deserialize DateTime in UnixTimeStamp
            </summary>
        </member>
        <member name="T:Algolia.Search.Serializer.EditConverter">
            <summary>
            Custom converter for legacy EDIT objects
            </summary>
        </member>
        <member name="M:Algolia.Search.Serializer.EditConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Collections.Generic.IEnumerable{Algolia.Search.Models.Rules.Edit},System.Boolean,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Converter for handling legacy Edit
            </summary>
            <param name="reader"></param>
            <param name="objectType"></param>
            <param name="existingValue"></param>
            <param name="hasExistingValue"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Serializer.EditConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Collections.Generic.IEnumerable{Algolia.Search.Models.Rules.Edit},Newtonsoft.Json.JsonSerializer)">
            <summary>
            No need to implement this method as we want to keep the default writer
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="serializer"></param>
        </member>
        <member name="P:Algolia.Search.Serializer.EditConverter.CanWrite">
            <summary>
            Disable write JSOn
            </summary>
        </member>
        <member name="T:Algolia.Search.Serializer.JsonConfig">
            <summary>
            Used to ensure that all the properties are serialized and deserialized well (because of Pascal and Camel Casing)
            </summary>
        </member>
        <member name="T:Algolia.Search.Serializer.MultiTypeObjectConverter">
            <summary>
            Multi type converter for handling multi type properties in Algolia settings
            </summary>
        </member>
        <member name="M:Algolia.Search.Serializer.MultiTypeObjectConverter.CanConvert(System.Type)">
             <summary>
            
             </summary>
             <param name="objectType"></param>
             <returns></returns>
        </member>
        <member name="M:Algolia.Search.Serializer.MultiTypeObjectConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Algolia's specific converter for backward compatibilities
            Some object could be primtive or list of string
            </summary>
            <param name="reader"></param>
            <param name="objectType"></param>
            <param name="existingValue"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Serializer.MultiTypeObjectConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            No need to implement this method as we want the default behavior for writting
            </summary>
            <param name="writer"></param>
            <param name="value"></param>
            <param name="serializer"></param>
        </member>
        <member name="P:Algolia.Search.Serializer.MultiTypeObjectConverter.CanWrite">
            <summary>
            Disable write json
            </summary>
        </member>
        <member name="T:Algolia.Search.Serializer.QuerySerializer">
            <summary>
            Custom serializer for the query object because it must math specific syntax
            For more informations regarding the syntax
            https://www.algolia.com/doc/rest-api/search/#search-endpoints
            https://www.newtonsoft.com/json/help/html/JsonConverterAttributeClass.htm
            </summary>
        </member>
        <member name="T:Algolia.Search.Serializer.SerializerHelper">
            <summary>
            Helper to improve performance with large json
            https://www.newtonsoft.com/json/help/html/performance.htm
            </summary>
        </member>
        <member name="M:Algolia.Search.Serializer.SettingsConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,Algolia.Search.Models.Settings.IndexSettings,System.Boolean,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Custom serializer to handle/map legacy objects to new properties
            </summary>
            <param name="reader"></param>
            <param name="objectType"></param>
            <param name="existingValue"></param>
            <param name="hasExistingValue"></param>
            <param name="serializer"></param>
            <returns></returns>
        </member>
        <member name="T:Algolia.Search.Transport.HttpTransport">
            <summary>
            TransportLogic implementation of <see cref="T:Algolia.Search.Transport.IHttpTransport"/>
            </summary>
        </member>
        <member name="M:Algolia.Search.Transport.HttpTransport.#ctor(Algolia.Search.Clients.AlgoliaConfig,Algolia.Search.Http.IHttpRequester)">
            <summary>
            Instantiate the transport class with the given configuratio and requester
            </summary>
            <param name="config">Algolia Config</param>
            <param name="httpClient">An implementation of http requester <see cref="T:Algolia.Search.Http.IHttpRequester"/> </param>
        </member>
        <member name="M:Algolia.Search.Transport.HttpTransport.ExecuteRequestAsync``1(System.Net.Http.HttpMethod,System.String,Algolia.Search.Models.Enums.CallType,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Transport.HttpTransport.ExecuteRequestAsync``2(System.Net.Http.HttpMethod,System.String,Algolia.Search.Models.Enums.CallType,``1,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Transport.HttpTransport.CreateRequestContent``1(``0)">
            <summary>
            Generate stream for serializing objects
            </summary>
            <param name="data">Data to send</param>
            <typeparam name="T">Type of the data to send/retrieve</typeparam>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Transport.HttpTransport.GenerateHeaders(System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Generate common headers from the config
            </summary>
            <param name="optionalHeaders"></param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Transport.HttpTransport.BuildUri(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Build uri depending on the method
            </summary>
            <param name="url"></param>
            <param name="baseUri"></param>
            <param name="optionalQueryParameters"></param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Transport.HttpTransport.GetTimeOut(Algolia.Search.Models.Enums.CallType)">
            <summary>
            Compute the request timeout with the given call type and configuration
            </summary>
            <param name="callType"></param>
            <returns></returns>
        </member>
        <member name="T:Algolia.Search.Transport.IHttpTransport">
            <summary>
            Algolia's requester wrapper interface
            </summary>
        </member>
        <member name="M:Algolia.Search.Transport.IHttpTransport.ExecuteRequestAsync``2(System.Net.Http.HttpMethod,System.String,Algolia.Search.Models.Enums.CallType,``1,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Call api with retry strategy
            </summary>
            <typeparam name="TResult">Return type</typeparam>
            <typeparam name="TData">Data type</typeparam>
            <param name="method">The HttpMethod <see cref="T:System.Net.Http.HttpMethod"/></param>
            <param name="uri">The endpoint URI</param>
            <param name="callType">The method Algolia's call type <see cref="T:Algolia.Search.Models.Enums.CallType"/> </param>
            <param name="data">Your data</param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
        </member>
        <member name="M:Algolia.Search.Transport.IHttpTransport.ExecuteRequestAsync``1(System.Net.Http.HttpMethod,System.String,Algolia.Search.Models.Enums.CallType,Algolia.Search.Http.RequestOptions,System.Threading.CancellationToken)">
            <summary>
            Execute the request (more likely request with no body like GET or Delete)
            </summary>
            <typeparam name="TResult"></typeparam>
            <param name="method">The HttpMethod <see cref="T:System.Net.Http.HttpMethod"/></param>
            <param name="uri">The endpoint URI</param>
            <param name="callType">The method Algolia's call type <see cref="T:Algolia.Search.Models.Enums.CallType"/> </param>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="ct">Optional cancellation token</param>
        </member>
        <member name="M:Algolia.Search.Transport.IRetryStrategy.GetTryableHost(Algolia.Search.Models.Enums.CallType)">
            <summary>
            Returns the tryable host regarding the retry strategy
            </summary>
            <param name="callType">The Call type <see cref="T:Algolia.Search.Models.Enums.CallType"/></param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Transport.IRetryStrategy.Decide(Algolia.Search.Transport.StatefulHost,System.Int32,System.Boolean)">
            <summary>
            Update host's state
            </summary>
            <param name="tryableHost">A statefull host</param>
            <param name="httpResponseCode">An http response code</param>
            <param name="isTimedOut">Is the request timed out</param>
            <returns></returns>
        </member>
        <member name="T:Algolia.Search.Transport.RetryStrategy">
            <summary>
            Retry strategy logic in case of error/timeout
            </summary>
        </member>
        <member name="F:Algolia.Search.Transport.RetryStrategy._hosts">
            <summary>
            Hosts that will be used by the strategy
            Could be default hosts or custom hosts
            </summary>
        </member>
        <member name="F:Algolia.Search.Transport.RetryStrategy._lock">
            <summary>
            The synchronization lock for each set RetryStrategy/Transport/Client
            </summary>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Transport.RetryStrategy.#ctor(Algolia.Search.Clients.AlgoliaConfig)">
            <summary>
            Default constructor
            </summary>
            <param name="config">Client's configuration</param>
        </member>
        <member name="M:Algolia.Search.Transport.RetryStrategy.GetTryableHost(Algolia.Search.Models.Enums.CallType)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Transport.RetryStrategy.Decide(Algolia.Search.Transport.StatefulHost,System.Int32,System.Boolean)">
            <inheritdoc />
        </member>
        <member name="M:Algolia.Search.Transport.RetryStrategy.IsSuccess(System.Int32)">
            <summary>
             Tells if the response is a success or not
            </summary>
            <param name="httpResponseCode"></param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Transport.RetryStrategy.IsRetryable(System.Int32)">
            <summary>
             Tells if the response is retryable or not
            </summary>
            <param name="httpResponseCode"></param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Transport.RetryStrategy.Reset(Algolia.Search.Transport.StatefulHost)">
            <summary>
            Reset the given host
            </summary>
            <param name="host"></param>
        </member>
        <member name="M:Algolia.Search.Transport.RetryStrategy.ResetExpiredHosts">
            <summary>
            Reset down host after 5 minutes
            </summary>
        </member>
        <member name="T:Algolia.Search.Transport.StatefulHost">
            <summary>
            Algolia's stateful host
            </summary>
        </member>
        <member name="P:Algolia.Search.Transport.StatefulHost.Url">
            <summary>
            Url endpoint without the scheme
            </summary>
        </member>
        <member name="P:Algolia.Search.Transport.StatefulHost.Up">
            <summary>
            Is the host up or not
            </summary>
        </member>
        <member name="P:Algolia.Search.Transport.StatefulHost.RetryCount">
            <summary>
            Retry count
            </summary>
        </member>
        <member name="P:Algolia.Search.Transport.StatefulHost.LastUse">
            <summary>
            Last time the host has been used
            </summary>
        </member>
        <member name="P:Algolia.Search.Transport.StatefulHost.Accept">
            <summary>
            Calltype accepted by the host
            </summary>
        </member>
        <member name="M:Algolia.Search.Utils.AlgoliaHelper.EnsureObjectID``1">
            <summary>
            Ensure that the type T has a property ObjectID or a JsonPropertyAttribute(Name="objectID")
            </summary>
            <typeparam name="T">Type to check/type</typeparam>
        </member>
        <member name="M:Algolia.Search.Utils.AlgoliaHelper.GetObjectID``1(``0)">
            <summary>
            Check if the Property or JsonPropertyAttribute with name='objectID' exists in the given type'
            </summary>
            <typeparam name="T">Type of the data to send/retrieve</typeparam>
            <param name="data">Data to send</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Utils.AlgoliaHelper.GetAllProperties(System.Type)">
            <summary>
            Get all properties of a type (including base class)
            </summary>
            <param name="T"></param>
        </member>
        <member name="M:Algolia.Search.Utils.AlgoliaHelper.PropertyOrJsonAttributeExists``1(System.String)">
            <summary>
            Check if the Property or JsonPropertyAttribute exists in the given type, return null if not exist otherwise return propertyInfo
            </summary>
            <typeparam name="T">Type of the data to send/retrieve</typeparam>
            <param name="propertyName">Name of the property to check. Will be test as PascalCase for property and as camelCase for JsonAttribute</param>
            <returns></returns>
        </member>
        <member name="T:Algolia.Search.Utils.AlgoliaWaitableResponseExtensions">
            <summary>
            Extensions methods regarding algolia waitable responses
            </summary>
        </member>
        <member name="M:Algolia.Search.Utils.AlgoliaWaitableResponseExtensions.Wait(System.Collections.Generic.IEnumerable{Algolia.Search.Models.Common.IAlgoliaWaitableResponse})">
            <summary>
            Wait on multiple algolia responses
            </summary>
            <param name="responses"></param>
        </member>
        <member name="M:Algolia.Search.Utils.CamelCaseHelper.ToCamelCase(System.String)">
            <summary>
            Helper used in the custom query serializer otherwise we use the built-in camel case strategy by JSON.Net
            </summary>
            <param name="stringToCamelCase"></param>
            <returns></returns>
        </member>
        <member name="T:Algolia.Search.Utils.DateTimeHelper">
            <summary>
            We need this helper because the ToUnixTimeSeconds() is not supported in 4.5 framework
            Inspired by : https://www.fluxbytes.com/csharp/convert-datetime-to-unix-time-in-c/
            </summary>
        </member>
        <member name="M:Algolia.Search.Utils.DateTimeHelper.ToUnixTimeSeconds(System.DateTime)">
            <summary>
            Convert a date time object to Unix time representation.
            </summary>
            <param name="date">The datetime object to convert to Unix time stamp.</param>
            <returns>Returns a numerical representation (Unix time) of the DateTime object.</returns>
        </member>
        <member name="M:Algolia.Search.Utils.DateTimeHelper.UnixTimeToDateTime(System.Int64)">
            <summary>
            Convert Unix time value to a DateTime object.
            </summary>
            <param name="unixTime">The Unix time stamp you want to convert to DateTime.</param>
            <returns>Returns a DateTime object that represents value of the Unix time.</returns>
        </member>
        <member name="T:Algolia.Search.Utils.DictionaryHelper">
            <summary>
            Helper regarding dictionary mergning
            </summary>
        </member>
        <member name="M:Algolia.Search.Utils.DictionaryHelper.MergeWith``2(System.Collections.Generic.Dictionary{``0,``1},System.Collections.Generic.Dictionary{``0,``1})">
            <summary>
            Merge a into b removing the duplicates from b if they exists
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <typeparam name="TKey"></typeparam>
            <typeparam name="TValue"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Algolia.Search.Utils.HmacShaHelper">
            <summary>
            Helper to compute HMAC SHA 256
            </summary>
        </member>
        <member name="T:Algolia.Search.Utils.LogHelper">
            <summary>
            Logger for debugging purposes
            </summary>
        </member>
        <member name="M:Algolia.Search.Utils.QueryStringHelper.ToQueryString``1(``0,System.String[])">
            <summary>
            Transfrom a poco (only class of primitive objects) to a query string
            </summary>
            <param name="value"></param>
            <param name="ignoreList"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="T:Algolia.Search.Utils.RequestOptionsHelper">
            <summary>
            Helper for Algolia's request options
            </summary>
        </member>
        <member name="M:Algolia.Search.Utils.RequestOptionsHelper.AddQueryParams(Algolia.Search.Http.RequestOptions,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Create a request option with or without existing queryParams or Request options
            </summary>
            <param name="requestOptions">Add extra http header or query parameters to Algolia</param>
            <param name="queryParams">Query params</param>
            <returns></returns>
        </member>
        <member name="M:Algolia.Search.Utils.RequestOptionsHelper.AddHeaders(Algolia.Search.Http.RequestOptions,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Create a request option with or without existing headers or Request options
            </summary>
            <param name="requestOptions">request options</param>
            <param name="headers">Custom headers</param>
            <returns></returns>
        </member>
        <member name="T:Algolia.Search.Utils.ShuffleHelper">
            <summary>
            Extension method to shuffle List
            https://stackoverflow.com/questions/5807128/an-extension-method-on-ienumerable-needed-for-shuffling
            </summary>
        </member>
    </members>
</doc>
